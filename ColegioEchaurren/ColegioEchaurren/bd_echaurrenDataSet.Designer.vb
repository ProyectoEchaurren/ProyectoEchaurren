'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("bd_echaurrenDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class bd_echaurrenDataSet
    Inherits Global.System.Data.DataSet
    
    Private tablealumno As alumnoDataTable
    
    Private tablecontacto_emergencia As contacto_emergenciaDataTable
    
    Private tabledireccion As direccionDataTable
    
    Private tableresponsable As responsableDataTable
    
    Private tableresponsable_alumno As responsable_alumnoDataTable
    
    Private tableservicio_por_alumno As servicio_por_alumnoDataTable
    
    Private tableservicio_salud As servicio_saludDataTable
    
    Private tabletelefono As telefonoDataTable
    
    Private tabletipo_responsable As tipo_responsableDataTable
    
    Private relationfk_Contacto_emergencia_Alumno1 As Global.System.Data.DataRelation
    
    Private relationfk_Direccion_Responsable1 As Global.System.Data.DataRelation
    
    Private relationfk_Responsable_alumno_Alumno1 As Global.System.Data.DataRelation
    
    Private relationfk_Responsable_alumno_Responsable1 As Global.System.Data.DataRelation
    
    Private relationfk_Responsable_alumno_Tipo_responsable1 As Global.System.Data.DataRelation
    
    Private relationfk_Servicio_salud_has_Alumno_Alumno1 As Global.System.Data.DataRelation
    
    Private relationfk_Servicio_salud_has_Alumno_Servicio_salud1 As Global.System.Data.DataRelation
    
    Private relationfk_Telefono_Responsable1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("alumno")) Is Nothing) Then
                MyBase.Tables.Add(New alumnoDataTable(ds.Tables("alumno")))
            End If
            If (Not (ds.Tables("contacto_emergencia")) Is Nothing) Then
                MyBase.Tables.Add(New contacto_emergenciaDataTable(ds.Tables("contacto_emergencia")))
            End If
            If (Not (ds.Tables("direccion")) Is Nothing) Then
                MyBase.Tables.Add(New direccionDataTable(ds.Tables("direccion")))
            End If
            If (Not (ds.Tables("responsable")) Is Nothing) Then
                MyBase.Tables.Add(New responsableDataTable(ds.Tables("responsable")))
            End If
            If (Not (ds.Tables("responsable_alumno")) Is Nothing) Then
                MyBase.Tables.Add(New responsable_alumnoDataTable(ds.Tables("responsable_alumno")))
            End If
            If (Not (ds.Tables("servicio_por_alumno")) Is Nothing) Then
                MyBase.Tables.Add(New servicio_por_alumnoDataTable(ds.Tables("servicio_por_alumno")))
            End If
            If (Not (ds.Tables("servicio_salud")) Is Nothing) Then
                MyBase.Tables.Add(New servicio_saludDataTable(ds.Tables("servicio_salud")))
            End If
            If (Not (ds.Tables("telefono")) Is Nothing) Then
                MyBase.Tables.Add(New telefonoDataTable(ds.Tables("telefono")))
            End If
            If (Not (ds.Tables("tipo_responsable")) Is Nothing) Then
                MyBase.Tables.Add(New tipo_responsableDataTable(ds.Tables("tipo_responsable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property alumno() As alumnoDataTable
        Get
            Return Me.tablealumno
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property contacto_emergencia() As contacto_emergenciaDataTable
        Get
            Return Me.tablecontacto_emergencia
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property direccion() As direccionDataTable
        Get
            Return Me.tabledireccion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property responsable() As responsableDataTable
        Get
            Return Me.tableresponsable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property responsable_alumno() As responsable_alumnoDataTable
        Get
            Return Me.tableresponsable_alumno
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property servicio_por_alumno() As servicio_por_alumnoDataTable
        Get
            Return Me.tableservicio_por_alumno
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property servicio_salud() As servicio_saludDataTable
        Get
            Return Me.tableservicio_salud
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property telefono() As telefonoDataTable
        Get
            Return Me.tabletelefono
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tipo_responsable() As tipo_responsableDataTable
        Get
            Return Me.tabletipo_responsable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As bd_echaurrenDataSet = CType(MyBase.Clone,bd_echaurrenDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("alumno")) Is Nothing) Then
                MyBase.Tables.Add(New alumnoDataTable(ds.Tables("alumno")))
            End If
            If (Not (ds.Tables("contacto_emergencia")) Is Nothing) Then
                MyBase.Tables.Add(New contacto_emergenciaDataTable(ds.Tables("contacto_emergencia")))
            End If
            If (Not (ds.Tables("direccion")) Is Nothing) Then
                MyBase.Tables.Add(New direccionDataTable(ds.Tables("direccion")))
            End If
            If (Not (ds.Tables("responsable")) Is Nothing) Then
                MyBase.Tables.Add(New responsableDataTable(ds.Tables("responsable")))
            End If
            If (Not (ds.Tables("responsable_alumno")) Is Nothing) Then
                MyBase.Tables.Add(New responsable_alumnoDataTable(ds.Tables("responsable_alumno")))
            End If
            If (Not (ds.Tables("servicio_por_alumno")) Is Nothing) Then
                MyBase.Tables.Add(New servicio_por_alumnoDataTable(ds.Tables("servicio_por_alumno")))
            End If
            If (Not (ds.Tables("servicio_salud")) Is Nothing) Then
                MyBase.Tables.Add(New servicio_saludDataTable(ds.Tables("servicio_salud")))
            End If
            If (Not (ds.Tables("telefono")) Is Nothing) Then
                MyBase.Tables.Add(New telefonoDataTable(ds.Tables("telefono")))
            End If
            If (Not (ds.Tables("tipo_responsable")) Is Nothing) Then
                MyBase.Tables.Add(New tipo_responsableDataTable(ds.Tables("tipo_responsable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablealumno = CType(MyBase.Tables("alumno"),alumnoDataTable)
        If (initTable = true) Then
            If (Not (Me.tablealumno) Is Nothing) Then
                Me.tablealumno.InitVars
            End If
        End If
        Me.tablecontacto_emergencia = CType(MyBase.Tables("contacto_emergencia"),contacto_emergenciaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecontacto_emergencia) Is Nothing) Then
                Me.tablecontacto_emergencia.InitVars
            End If
        End If
        Me.tabledireccion = CType(MyBase.Tables("direccion"),direccionDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledireccion) Is Nothing) Then
                Me.tabledireccion.InitVars
            End If
        End If
        Me.tableresponsable = CType(MyBase.Tables("responsable"),responsableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableresponsable) Is Nothing) Then
                Me.tableresponsable.InitVars
            End If
        End If
        Me.tableresponsable_alumno = CType(MyBase.Tables("responsable_alumno"),responsable_alumnoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableresponsable_alumno) Is Nothing) Then
                Me.tableresponsable_alumno.InitVars
            End If
        End If
        Me.tableservicio_por_alumno = CType(MyBase.Tables("servicio_por_alumno"),servicio_por_alumnoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableservicio_por_alumno) Is Nothing) Then
                Me.tableservicio_por_alumno.InitVars
            End If
        End If
        Me.tableservicio_salud = CType(MyBase.Tables("servicio_salud"),servicio_saludDataTable)
        If (initTable = true) Then
            If (Not (Me.tableservicio_salud) Is Nothing) Then
                Me.tableservicio_salud.InitVars
            End If
        End If
        Me.tabletelefono = CType(MyBase.Tables("telefono"),telefonoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletelefono) Is Nothing) Then
                Me.tabletelefono.InitVars
            End If
        End If
        Me.tabletipo_responsable = CType(MyBase.Tables("tipo_responsable"),tipo_responsableDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletipo_responsable) Is Nothing) Then
                Me.tabletipo_responsable.InitVars
            End If
        End If
        Me.relationfk_Contacto_emergencia_Alumno1 = Me.Relations("fk_Contacto_emergencia_Alumno1")
        Me.relationfk_Direccion_Responsable1 = Me.Relations("fk_Direccion_Responsable1")
        Me.relationfk_Responsable_alumno_Alumno1 = Me.Relations("fk_Responsable_alumno_Alumno1")
        Me.relationfk_Responsable_alumno_Responsable1 = Me.Relations("fk_Responsable_alumno_Responsable1")
        Me.relationfk_Responsable_alumno_Tipo_responsable1 = Me.Relations("fk_Responsable_alumno_Tipo_responsable1")
        Me.relationfk_Servicio_salud_has_Alumno_Alumno1 = Me.Relations("fk_Servicio_salud_has_Alumno_Alumno1")
        Me.relationfk_Servicio_salud_has_Alumno_Servicio_salud1 = Me.Relations("fk_Servicio_salud_has_Alumno_Servicio_salud1")
        Me.relationfk_Telefono_Responsable1 = Me.Relations("fk_Telefono_Responsable1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "bd_echaurrenDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/bd_echaurrenDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablealumno = New alumnoDataTable()
        MyBase.Tables.Add(Me.tablealumno)
        Me.tablecontacto_emergencia = New contacto_emergenciaDataTable()
        MyBase.Tables.Add(Me.tablecontacto_emergencia)
        Me.tabledireccion = New direccionDataTable()
        MyBase.Tables.Add(Me.tabledireccion)
        Me.tableresponsable = New responsableDataTable()
        MyBase.Tables.Add(Me.tableresponsable)
        Me.tableresponsable_alumno = New responsable_alumnoDataTable()
        MyBase.Tables.Add(Me.tableresponsable_alumno)
        Me.tableservicio_por_alumno = New servicio_por_alumnoDataTable()
        MyBase.Tables.Add(Me.tableservicio_por_alumno)
        Me.tableservicio_salud = New servicio_saludDataTable()
        MyBase.Tables.Add(Me.tableservicio_salud)
        Me.tabletelefono = New telefonoDataTable()
        MyBase.Tables.Add(Me.tabletelefono)
        Me.tabletipo_responsable = New tipo_responsableDataTable()
        MyBase.Tables.Add(Me.tabletipo_responsable)
        Me.relationfk_Contacto_emergencia_Alumno1 = New Global.System.Data.DataRelation("fk_Contacto_emergencia_Alumno1", New Global.System.Data.DataColumn() {Me.tablealumno.RutAlumnoColumn}, New Global.System.Data.DataColumn() {Me.tablecontacto_emergencia.Alumno_RutAlumnoColumn}, false)
        Me.Relations.Add(Me.relationfk_Contacto_emergencia_Alumno1)
        Me.relationfk_Direccion_Responsable1 = New Global.System.Data.DataRelation("fk_Direccion_Responsable1", New Global.System.Data.DataColumn() {Me.tableresponsable.RutResponsableColumn}, New Global.System.Data.DataColumn() {Me.tabledireccion.Responsable_RutResponsableColumn}, false)
        Me.Relations.Add(Me.relationfk_Direccion_Responsable1)
        Me.relationfk_Responsable_alumno_Alumno1 = New Global.System.Data.DataRelation("fk_Responsable_alumno_Alumno1", New Global.System.Data.DataColumn() {Me.tablealumno.RutAlumnoColumn}, New Global.System.Data.DataColumn() {Me.tableresponsable_alumno.Alumno_RutAlumnoColumn}, false)
        Me.Relations.Add(Me.relationfk_Responsable_alumno_Alumno1)
        Me.relationfk_Responsable_alumno_Responsable1 = New Global.System.Data.DataRelation("fk_Responsable_alumno_Responsable1", New Global.System.Data.DataColumn() {Me.tableresponsable.RutResponsableColumn}, New Global.System.Data.DataColumn() {Me.tableresponsable_alumno.Responsable_RutResponsableColumn}, false)
        Me.Relations.Add(Me.relationfk_Responsable_alumno_Responsable1)
        Me.relationfk_Responsable_alumno_Tipo_responsable1 = New Global.System.Data.DataRelation("fk_Responsable_alumno_Tipo_responsable1", New Global.System.Data.DataColumn() {Me.tabletipo_responsable.idTipo_responsableColumn}, New Global.System.Data.DataColumn() {Me.tableresponsable_alumno.Tipo_responsable_idTipo_responsableColumn}, false)
        Me.Relations.Add(Me.relationfk_Responsable_alumno_Tipo_responsable1)
        Me.relationfk_Servicio_salud_has_Alumno_Alumno1 = New Global.System.Data.DataRelation("fk_Servicio_salud_has_Alumno_Alumno1", New Global.System.Data.DataColumn() {Me.tablealumno.RutAlumnoColumn}, New Global.System.Data.DataColumn() {Me.tableservicio_por_alumno.Alumno_RutAlumnoColumn}, false)
        Me.Relations.Add(Me.relationfk_Servicio_salud_has_Alumno_Alumno1)
        Me.relationfk_Servicio_salud_has_Alumno_Servicio_salud1 = New Global.System.Data.DataRelation("fk_Servicio_salud_has_Alumno_Servicio_salud1", New Global.System.Data.DataColumn() {Me.tableservicio_salud.idServicio_saludColumn}, New Global.System.Data.DataColumn() {Me.tableservicio_por_alumno.Servicio_salud_idServicio_saludColumn}, false)
        Me.Relations.Add(Me.relationfk_Servicio_salud_has_Alumno_Servicio_salud1)
        Me.relationfk_Telefono_Responsable1 = New Global.System.Data.DataRelation("fk_Telefono_Responsable1", New Global.System.Data.DataColumn() {Me.tableresponsable.RutResponsableColumn}, New Global.System.Data.DataColumn() {Me.tabletelefono.Responsable_RutResponsableColumn}, false)
        Me.Relations.Add(Me.relationfk_Telefono_Responsable1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializealumno() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecontacto_emergencia() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedireccion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeresponsable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeresponsable_alumno() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeservicio_por_alumno() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeservicio_salud() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetelefono() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetipo_responsable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub alumnoRowChangeEventHandler(ByVal sender As Object, ByVal e As alumnoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub contacto_emergenciaRowChangeEventHandler(ByVal sender As Object, ByVal e As contacto_emergenciaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub direccionRowChangeEventHandler(ByVal sender As Object, ByVal e As direccionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub responsableRowChangeEventHandler(ByVal sender As Object, ByVal e As responsableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub responsable_alumnoRowChangeEventHandler(ByVal sender As Object, ByVal e As responsable_alumnoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub servicio_por_alumnoRowChangeEventHandler(ByVal sender As Object, ByVal e As servicio_por_alumnoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub servicio_saludRowChangeEventHandler(ByVal sender As Object, ByVal e As servicio_saludRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub telefonoRowChangeEventHandler(ByVal sender As Object, ByVal e As telefonoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tipo_responsableRowChangeEventHandler(ByVal sender As Object, ByVal e As tipo_responsableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class alumnoDataTable
        Inherits Global.System.Data.TypedTableBase(Of alumnoRow)
        
        Private columnRutAlumno As Global.System.Data.DataColumn
        
        Private columnNombreCompleto As Global.System.Data.DataColumn
        
        Private columnApePaterno As Global.System.Data.DataColumn
        
        Private columnApeMaterno As Global.System.Data.DataColumn
        
        Private columnFechaNac As Global.System.Data.DataColumn
        
        Private _columnDomicilio_calle_ As Global.System.Data.DataColumn
        
        Private columnSectorVilla As Global.System.Data.DataColumn
        
        Private columnComuna As Global.System.Data.DataColumn
        
        Private columnTelefono As Global.System.Data.DataColumn
        
        Private columnColegioPresedencia As Global.System.Data.DataColumn
        
        Private columnCurso As Global.System.Data.DataColumn
        
        Private columnCursosRepetidos As Global.System.Data.DataColumn
        
        Private columnBecado As Global.System.Data.DataColumn
        
        Private columnHermanosEstablecimiento As Global.System.Data.DataColumn
        
        Private columnAntecedentesMedicos As Global.System.Data.DataColumn
        
        Private columnNumMatricula As Global.System.Data.DataColumn
        
        Private columnFechaMatricula As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "alumno"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RutAlumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRutAlumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreCompletoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCompleto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApePaternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApePaterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApeMaternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApeMaterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaNacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaNac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Domicilio_calle_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnDomicilio_calle_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SectorVillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorVilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComunaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColegioPresedenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColegioPresedencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CursoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CursosRepetidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCursosRepetidos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BecadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBecado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HermanosEstablecimientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHermanosEstablecimiento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AntecedentesMedicosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAntecedentesMedicos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumMatriculaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumMatricula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaMatriculaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaMatricula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As alumnoRow
            Get
                Return CType(Me.Rows(index),alumnoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event alumnoRowChanging As alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event alumnoRowChanged As alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event alumnoRowDeleting As alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event alumnoRowDeleted As alumnoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddalumnoRow(ByVal row As alumnoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddalumnoRow( _
                    ByVal RutAlumno As String,  _
                    ByVal NombreCompleto As String,  _
                    ByVal ApePaterno As String,  _
                    ByVal ApeMaterno As String,  _
                    ByVal FechaNac As Date,  _
                    ByVal _Domicilio_calle_ As String,  _
                    ByVal SectorVilla As String,  _
                    ByVal Comuna As String,  _
                    ByVal Telefono As String,  _
                    ByVal ColegioPresedencia As String,  _
                    ByVal Curso As String,  _
                    ByVal CursosRepetidos As String,  _
                    ByVal Becado As Boolean,  _
                    ByVal HermanosEstablecimiento As String,  _
                    ByVal AntecedentesMedicos As String,  _
                    ByVal NumMatricula As String,  _
                    ByVal FechaMatricula As Date) As alumnoRow
            Dim rowalumnoRow As alumnoRow = CType(Me.NewRow,alumnoRow)
            Dim columnValuesArray() As Object = New Object() {RutAlumno, NombreCompleto, ApePaterno, ApeMaterno, FechaNac, _Domicilio_calle_, SectorVilla, Comuna, Telefono, ColegioPresedencia, Curso, CursosRepetidos, Becado, HermanosEstablecimiento, AntecedentesMedicos, NumMatricula, FechaMatricula}
            rowalumnoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowalumnoRow)
            Return rowalumnoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRutAlumno(ByVal RutAlumno As String) As alumnoRow
            Return CType(Me.Rows.Find(New Object() {RutAlumno}),alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As alumnoDataTable = CType(MyBase.Clone,alumnoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New alumnoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRutAlumno = MyBase.Columns("RutAlumno")
            Me.columnNombreCompleto = MyBase.Columns("NombreCompleto")
            Me.columnApePaterno = MyBase.Columns("ApePaterno")
            Me.columnApeMaterno = MyBase.Columns("ApeMaterno")
            Me.columnFechaNac = MyBase.Columns("FechaNac")
            Me._columnDomicilio_calle_ = MyBase.Columns("Domicilio(calle)")
            Me.columnSectorVilla = MyBase.Columns("SectorVilla")
            Me.columnComuna = MyBase.Columns("Comuna")
            Me.columnTelefono = MyBase.Columns("Telefono")
            Me.columnColegioPresedencia = MyBase.Columns("ColegioPresedencia")
            Me.columnCurso = MyBase.Columns("Curso")
            Me.columnCursosRepetidos = MyBase.Columns("CursosRepetidos")
            Me.columnBecado = MyBase.Columns("Becado")
            Me.columnHermanosEstablecimiento = MyBase.Columns("HermanosEstablecimiento")
            Me.columnAntecedentesMedicos = MyBase.Columns("AntecedentesMedicos")
            Me.columnNumMatricula = MyBase.Columns("NumMatricula")
            Me.columnFechaMatricula = MyBase.Columns("FechaMatricula")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRutAlumno = New Global.System.Data.DataColumn("RutAlumno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRutAlumno)
            Me.columnNombreCompleto = New Global.System.Data.DataColumn("NombreCompleto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCompleto)
            Me.columnApePaterno = New Global.System.Data.DataColumn("ApePaterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApePaterno)
            Me.columnApeMaterno = New Global.System.Data.DataColumn("ApeMaterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApeMaterno)
            Me.columnFechaNac = New Global.System.Data.DataColumn("FechaNac", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaNac)
            Me._columnDomicilio_calle_ = New Global.System.Data.DataColumn("Domicilio(calle)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnDomicilio_calle_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnDomicilio_calle_")
            Me._columnDomicilio_calle_.ExtendedProperties.Add("Generator_UserColumnName", "Domicilio(calle)")
            MyBase.Columns.Add(Me._columnDomicilio_calle_)
            Me.columnSectorVilla = New Global.System.Data.DataColumn("SectorVilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorVilla)
            Me.columnComuna = New Global.System.Data.DataColumn("Comuna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuna)
            Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono)
            Me.columnColegioPresedencia = New Global.System.Data.DataColumn("ColegioPresedencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColegioPresedencia)
            Me.columnCurso = New Global.System.Data.DataColumn("Curso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurso)
            Me.columnCursosRepetidos = New Global.System.Data.DataColumn("CursosRepetidos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCursosRepetidos)
            Me.columnBecado = New Global.System.Data.DataColumn("Becado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBecado)
            Me.columnHermanosEstablecimiento = New Global.System.Data.DataColumn("HermanosEstablecimiento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHermanosEstablecimiento)
            Me.columnAntecedentesMedicos = New Global.System.Data.DataColumn("AntecedentesMedicos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAntecedentesMedicos)
            Me.columnNumMatricula = New Global.System.Data.DataColumn("NumMatricula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumMatricula)
            Me.columnFechaMatricula = New Global.System.Data.DataColumn("FechaMatricula", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaMatricula)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRutAlumno}, true))
            Me.columnRutAlumno.AllowDBNull = false
            Me.columnRutAlumno.Unique = true
            Me.columnRutAlumno.MaxLength = 45
            Me.columnNombreCompleto.MaxLength = 45
            Me.columnApePaterno.MaxLength = 45
            Me.columnApeMaterno.MaxLength = 45
            Me._columnDomicilio_calle_.MaxLength = 45
            Me.columnSectorVilla.MaxLength = 45
            Me.columnComuna.MaxLength = 45
            Me.columnTelefono.MaxLength = 45
            Me.columnColegioPresedencia.MaxLength = 45
            Me.columnCurso.MaxLength = 45
            Me.columnCursosRepetidos.MaxLength = 45
            Me.columnHermanosEstablecimiento.MaxLength = 45
            Me.columnAntecedentesMedicos.MaxLength = 100
            Me.columnNumMatricula.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewalumnoRow() As alumnoRow
            Return CType(Me.NewRow,alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New alumnoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.alumnoRowChangedEvent) Is Nothing) Then
                RaiseEvent alumnoRowChanged(Me, New alumnoRowChangeEvent(CType(e.Row,alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.alumnoRowChangingEvent) Is Nothing) Then
                RaiseEvent alumnoRowChanging(Me, New alumnoRowChangeEvent(CType(e.Row,alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.alumnoRowDeletedEvent) Is Nothing) Then
                RaiseEvent alumnoRowDeleted(Me, New alumnoRowChangeEvent(CType(e.Row,alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.alumnoRowDeletingEvent) Is Nothing) Then
                RaiseEvent alumnoRowDeleting(Me, New alumnoRowChangeEvent(CType(e.Row,alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovealumnoRow(ByVal row As alumnoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "alumnoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class contacto_emergenciaDataTable
        Inherits Global.System.Data.TypedTableBase(Of contacto_emergenciaRow)
        
        Private columnidContacto_emergencia As Global.System.Data.DataColumn
        
        Private columnNombreContacto As Global.System.Data.DataColumn
        
        Private columnNumero As Global.System.Data.DataColumn
        
        Private columnAlumno_RutAlumno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "contacto_emergencia"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idContacto_emergenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidContacto_emergencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreContactoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreContacto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Alumno_RutAlumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlumno_RutAlumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As contacto_emergenciaRow
            Get
                Return CType(Me.Rows(index),contacto_emergenciaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contacto_emergenciaRowChanging As contacto_emergenciaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contacto_emergenciaRowChanged As contacto_emergenciaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contacto_emergenciaRowDeleting As contacto_emergenciaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contacto_emergenciaRowDeleted As contacto_emergenciaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addcontacto_emergenciaRow(ByVal row As contacto_emergenciaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addcontacto_emergenciaRow(ByVal idContacto_emergencia As String, ByVal NombreContacto As String, ByVal Numero As String, ByVal parentalumnoRowByfk_Contacto_emergencia_Alumno1 As alumnoRow) As contacto_emergenciaRow
            Dim rowcontacto_emergenciaRow As contacto_emergenciaRow = CType(Me.NewRow,contacto_emergenciaRow)
            Dim columnValuesArray() As Object = New Object() {idContacto_emergencia, NombreContacto, Numero, Nothing}
            If (Not (parentalumnoRowByfk_Contacto_emergencia_Alumno1) Is Nothing) Then
                columnValuesArray(3) = parentalumnoRowByfk_Contacto_emergencia_Alumno1(0)
            End If
            rowcontacto_emergenciaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcontacto_emergenciaRow)
            Return rowcontacto_emergenciaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidContacto_emergencia(ByVal idContacto_emergencia As String) As contacto_emergenciaRow
            Return CType(Me.Rows.Find(New Object() {idContacto_emergencia}),contacto_emergenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As contacto_emergenciaDataTable = CType(MyBase.Clone,contacto_emergenciaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New contacto_emergenciaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidContacto_emergencia = MyBase.Columns("idContacto_emergencia")
            Me.columnNombreContacto = MyBase.Columns("NombreContacto")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnAlumno_RutAlumno = MyBase.Columns("Alumno_RutAlumno")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidContacto_emergencia = New Global.System.Data.DataColumn("idContacto_emergencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidContacto_emergencia)
            Me.columnNombreContacto = New Global.System.Data.DataColumn("NombreContacto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreContacto)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnAlumno_RutAlumno = New Global.System.Data.DataColumn("Alumno_RutAlumno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlumno_RutAlumno)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidContacto_emergencia}, true))
            Me.columnidContacto_emergencia.AllowDBNull = false
            Me.columnidContacto_emergencia.Unique = true
            Me.columnidContacto_emergencia.MaxLength = 20
            Me.columnNombreContacto.MaxLength = 45
            Me.columnNumero.MaxLength = 45
            Me.columnAlumno_RutAlumno.AllowDBNull = false
            Me.columnAlumno_RutAlumno.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newcontacto_emergenciaRow() As contacto_emergenciaRow
            Return CType(Me.NewRow,contacto_emergenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New contacto_emergenciaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(contacto_emergenciaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.contacto_emergenciaRowChangedEvent) Is Nothing) Then
                RaiseEvent contacto_emergenciaRowChanged(Me, New contacto_emergenciaRowChangeEvent(CType(e.Row,contacto_emergenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.contacto_emergenciaRowChangingEvent) Is Nothing) Then
                RaiseEvent contacto_emergenciaRowChanging(Me, New contacto_emergenciaRowChangeEvent(CType(e.Row,contacto_emergenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.contacto_emergenciaRowDeletedEvent) Is Nothing) Then
                RaiseEvent contacto_emergenciaRowDeleted(Me, New contacto_emergenciaRowChangeEvent(CType(e.Row,contacto_emergenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.contacto_emergenciaRowDeletingEvent) Is Nothing) Then
                RaiseEvent contacto_emergenciaRowDeleting(Me, New contacto_emergenciaRowChangeEvent(CType(e.Row,contacto_emergenciaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removecontacto_emergenciaRow(ByVal row As contacto_emergenciaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "contacto_emergenciaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class direccionDataTable
        Inherits Global.System.Data.TypedTableBase(Of direccionRow)
        
        Private columnidDireccion As Global.System.Data.DataColumn
        
        Private columnNombreCalle As Global.System.Data.DataColumn
        
        Private columnNumero As Global.System.Data.DataColumn
        
        Private columnComuna As Global.System.Data.DataColumn
        
        Private columnSector As Global.System.Data.DataColumn
        
        Private columnResponsable_RutResponsable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "direccion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idDireccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidDireccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreCalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComunaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable_RutResponsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable_RutResponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As direccionRow
            Get
                Return CType(Me.Rows(index),direccionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event direccionRowChanging As direccionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event direccionRowChanged As direccionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event direccionRowDeleting As direccionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event direccionRowDeleted As direccionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddireccionRow(ByVal row As direccionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddireccionRow(ByVal idDireccion As String, ByVal NombreCalle As String, ByVal Numero As String, ByVal Comuna As String, ByVal Sector As String, ByVal parentresponsableRowByfk_Direccion_Responsable1 As responsableRow) As direccionRow
            Dim rowdireccionRow As direccionRow = CType(Me.NewRow,direccionRow)
            Dim columnValuesArray() As Object = New Object() {idDireccion, NombreCalle, Numero, Comuna, Sector, Nothing}
            If (Not (parentresponsableRowByfk_Direccion_Responsable1) Is Nothing) Then
                columnValuesArray(5) = parentresponsableRowByfk_Direccion_Responsable1(0)
            End If
            rowdireccionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdireccionRow)
            Return rowdireccionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidDireccion(ByVal idDireccion As String) As direccionRow
            Return CType(Me.Rows.Find(New Object() {idDireccion}),direccionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As direccionDataTable = CType(MyBase.Clone,direccionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New direccionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidDireccion = MyBase.Columns("idDireccion")
            Me.columnNombreCalle = MyBase.Columns("NombreCalle")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnComuna = MyBase.Columns("Comuna")
            Me.columnSector = MyBase.Columns("Sector")
            Me.columnResponsable_RutResponsable = MyBase.Columns("Responsable_RutResponsable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidDireccion = New Global.System.Data.DataColumn("idDireccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidDireccion)
            Me.columnNombreCalle = New Global.System.Data.DataColumn("NombreCalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCalle)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnComuna = New Global.System.Data.DataColumn("Comuna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuna)
            Me.columnSector = New Global.System.Data.DataColumn("Sector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector)
            Me.columnResponsable_RutResponsable = New Global.System.Data.DataColumn("Responsable_RutResponsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable_RutResponsable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidDireccion}, true))
            Me.columnidDireccion.AllowDBNull = false
            Me.columnidDireccion.Unique = true
            Me.columnidDireccion.MaxLength = 10
            Me.columnNombreCalle.MaxLength = 45
            Me.columnNumero.MaxLength = 45
            Me.columnComuna.MaxLength = 45
            Me.columnSector.MaxLength = 45
            Me.columnResponsable_RutResponsable.AllowDBNull = false
            Me.columnResponsable_RutResponsable.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdireccionRow() As direccionRow
            Return CType(Me.NewRow,direccionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New direccionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(direccionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.direccionRowChangedEvent) Is Nothing) Then
                RaiseEvent direccionRowChanged(Me, New direccionRowChangeEvent(CType(e.Row,direccionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.direccionRowChangingEvent) Is Nothing) Then
                RaiseEvent direccionRowChanging(Me, New direccionRowChangeEvent(CType(e.Row,direccionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.direccionRowDeletedEvent) Is Nothing) Then
                RaiseEvent direccionRowDeleted(Me, New direccionRowChangeEvent(CType(e.Row,direccionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.direccionRowDeletingEvent) Is Nothing) Then
                RaiseEvent direccionRowDeleting(Me, New direccionRowChangeEvent(CType(e.Row,direccionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedireccionRow(ByVal row As direccionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "direccionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class responsableDataTable
        Inherits Global.System.Data.TypedTableBase(Of responsableRow)
        
        Private columnRutResponsable As Global.System.Data.DataColumn
        
        Private columnNombreCompleto As Global.System.Data.DataColumn
        
        Private columnEdad As Global.System.Data.DataColumn
        
        Private columnEstudiosCompletados As Global.System.Data.DataColumn
        
        Private columnCorreo_electronico As Global.System.Data.DataColumn
        
        Private columnTrabajo As Global.System.Data.DataColumn
        
        Private columnCargo As Global.System.Data.DataColumn
        
        Private columnTelefTrabajo As Global.System.Data.DataColumn
        
        Private columnDireccionTrabajo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "responsable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RutResponsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRutResponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreCompletoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCompleto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EdadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEdad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EstudiosCompletadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstudiosCompletados
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Correo_electronicoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorreo_electronico
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrabajoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrabajo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelefTrabajoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefTrabajo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DireccionTrabajoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionTrabajo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As responsableRow
            Get
                Return CType(Me.Rows(index),responsableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsableRowChanging As responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsableRowChanged As responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsableRowDeleting As responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsableRowDeleted As responsableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddresponsableRow(ByVal row As responsableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddresponsableRow(ByVal RutResponsable As String, ByVal NombreCompleto As String, ByVal Edad As Integer, ByVal EstudiosCompletados As String, ByVal Correo_electronico As String, ByVal Trabajo As String, ByVal Cargo As String, ByVal TelefTrabajo As String, ByVal DireccionTrabajo As String) As responsableRow
            Dim rowresponsableRow As responsableRow = CType(Me.NewRow,responsableRow)
            Dim columnValuesArray() As Object = New Object() {RutResponsable, NombreCompleto, Edad, EstudiosCompletados, Correo_electronico, Trabajo, Cargo, TelefTrabajo, DireccionTrabajo}
            rowresponsableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowresponsableRow)
            Return rowresponsableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRutResponsable(ByVal RutResponsable As String) As responsableRow
            Return CType(Me.Rows.Find(New Object() {RutResponsable}),responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As responsableDataTable = CType(MyBase.Clone,responsableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New responsableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRutResponsable = MyBase.Columns("RutResponsable")
            Me.columnNombreCompleto = MyBase.Columns("NombreCompleto")
            Me.columnEdad = MyBase.Columns("Edad")
            Me.columnEstudiosCompletados = MyBase.Columns("EstudiosCompletados")
            Me.columnCorreo_electronico = MyBase.Columns("Correo electronico")
            Me.columnTrabajo = MyBase.Columns("Trabajo")
            Me.columnCargo = MyBase.Columns("Cargo")
            Me.columnTelefTrabajo = MyBase.Columns("TelefTrabajo")
            Me.columnDireccionTrabajo = MyBase.Columns("DireccionTrabajo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRutResponsable = New Global.System.Data.DataColumn("RutResponsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRutResponsable)
            Me.columnNombreCompleto = New Global.System.Data.DataColumn("NombreCompleto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCompleto)
            Me.columnEdad = New Global.System.Data.DataColumn("Edad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEdad)
            Me.columnEstudiosCompletados = New Global.System.Data.DataColumn("EstudiosCompletados", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstudiosCompletados)
            Me.columnCorreo_electronico = New Global.System.Data.DataColumn("Correo electronico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorreo_electronico)
            Me.columnTrabajo = New Global.System.Data.DataColumn("Trabajo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrabajo)
            Me.columnCargo = New Global.System.Data.DataColumn("Cargo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo)
            Me.columnTelefTrabajo = New Global.System.Data.DataColumn("TelefTrabajo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefTrabajo)
            Me.columnDireccionTrabajo = New Global.System.Data.DataColumn("DireccionTrabajo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionTrabajo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRutResponsable}, true))
            Me.columnRutResponsable.AllowDBNull = false
            Me.columnRutResponsable.Unique = true
            Me.columnRutResponsable.MaxLength = 20
            Me.columnNombreCompleto.MaxLength = 50
            Me.columnEstudiosCompletados.MaxLength = 45
            Me.columnCorreo_electronico.MaxLength = 45
            Me.columnTrabajo.MaxLength = 45
            Me.columnCargo.MaxLength = 45
            Me.columnTelefTrabajo.MaxLength = 45
            Me.columnDireccionTrabajo.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewresponsableRow() As responsableRow
            Return CType(Me.NewRow,responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New responsableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.responsableRowChangedEvent) Is Nothing) Then
                RaiseEvent responsableRowChanged(Me, New responsableRowChangeEvent(CType(e.Row,responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.responsableRowChangingEvent) Is Nothing) Then
                RaiseEvent responsableRowChanging(Me, New responsableRowChangeEvent(CType(e.Row,responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.responsableRowDeletedEvent) Is Nothing) Then
                RaiseEvent responsableRowDeleted(Me, New responsableRowChangeEvent(CType(e.Row,responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.responsableRowDeletingEvent) Is Nothing) Then
                RaiseEvent responsableRowDeleting(Me, New responsableRowChangeEvent(CType(e.Row,responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveresponsableRow(ByVal row As responsableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "responsableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class responsable_alumnoDataTable
        Inherits Global.System.Data.TypedTableBase(Of responsable_alumnoRow)
        
        Private columnResponsable_RutResponsable As Global.System.Data.DataColumn
        
        Private columnAlumno_RutAlumno As Global.System.Data.DataColumn
        
        Private columnTipo_responsable_idTipo_responsable As Global.System.Data.DataColumn
        
        Private columnApoderado As Global.System.Data.DataColumn
        
        Private columnApoderadoSuplente As Global.System.Data.DataColumn
        
        Private columnAlumnoViveCon As Global.System.Data.DataColumn
        
        Private columnNumHijosFamilia As Global.System.Data.DataColumn
        
        Private columnLugarOcupacionHijos As Global.System.Data.DataColumn
        
        Private columnGrupoFamiliarComponen As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "responsable_alumno"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable_RutResponsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable_RutResponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Alumno_RutAlumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlumno_RutAlumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Tipo_responsable_idTipo_responsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo_responsable_idTipo_responsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApoderadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApoderado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApoderadoSuplenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApoderadoSuplente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlumnoViveConColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlumnoViveCon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumHijosFamiliaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumHijosFamilia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LugarOcupacionHijosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLugarOcupacionHijos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrupoFamiliarComponenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrupoFamiliarComponen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As responsable_alumnoRow
            Get
                Return CType(Me.Rows(index),responsable_alumnoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsable_alumnoRowChanging As responsable_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsable_alumnoRowChanged As responsable_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsable_alumnoRowDeleting As responsable_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event responsable_alumnoRowDeleted As responsable_alumnoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addresponsable_alumnoRow(ByVal row As responsable_alumnoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addresponsable_alumnoRow(ByVal parentresponsableRowByfk_Responsable_alumno_Responsable1 As responsableRow, ByVal parentalumnoRowByfk_Responsable_alumno_Alumno1 As alumnoRow, ByVal parenttipo_responsableRowByfk_Responsable_alumno_Tipo_responsable1 As tipo_responsableRow, ByVal Apoderado As Boolean, ByVal ApoderadoSuplente As Boolean, ByVal AlumnoViveCon As String, ByVal NumHijosFamilia As String, ByVal LugarOcupacionHijos As String, ByVal GrupoFamiliarComponen As String) As responsable_alumnoRow
            Dim rowresponsable_alumnoRow As responsable_alumnoRow = CType(Me.NewRow,responsable_alumnoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Nothing, Apoderado, ApoderadoSuplente, AlumnoViveCon, NumHijosFamilia, LugarOcupacionHijos, GrupoFamiliarComponen}
            If (Not (parentresponsableRowByfk_Responsable_alumno_Responsable1) Is Nothing) Then
                columnValuesArray(0) = parentresponsableRowByfk_Responsable_alumno_Responsable1(0)
            End If
            If (Not (parentalumnoRowByfk_Responsable_alumno_Alumno1) Is Nothing) Then
                columnValuesArray(1) = parentalumnoRowByfk_Responsable_alumno_Alumno1(0)
            End If
            If (Not (parenttipo_responsableRowByfk_Responsable_alumno_Tipo_responsable1) Is Nothing) Then
                columnValuesArray(2) = parenttipo_responsableRowByfk_Responsable_alumno_Tipo_responsable1(0)
            End If
            rowresponsable_alumnoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowresponsable_alumnoRow)
            Return rowresponsable_alumnoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByResponsable_RutResponsableAlumno_RutAlumnoTipo_responsable_idTipo_responsable(ByVal Responsable_RutResponsable As String, ByVal Alumno_RutAlumno As String, ByVal Tipo_responsable_idTipo_responsable As String) As responsable_alumnoRow
            Return CType(Me.Rows.Find(New Object() {Responsable_RutResponsable, Alumno_RutAlumno, Tipo_responsable_idTipo_responsable}),responsable_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As responsable_alumnoDataTable = CType(MyBase.Clone,responsable_alumnoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New responsable_alumnoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnResponsable_RutResponsable = MyBase.Columns("Responsable_RutResponsable")
            Me.columnAlumno_RutAlumno = MyBase.Columns("Alumno_RutAlumno")
            Me.columnTipo_responsable_idTipo_responsable = MyBase.Columns("Tipo_responsable_idTipo_responsable")
            Me.columnApoderado = MyBase.Columns("Apoderado")
            Me.columnApoderadoSuplente = MyBase.Columns("ApoderadoSuplente")
            Me.columnAlumnoViveCon = MyBase.Columns("AlumnoViveCon")
            Me.columnNumHijosFamilia = MyBase.Columns("NumHijosFamilia")
            Me.columnLugarOcupacionHijos = MyBase.Columns("LugarOcupacionHijos")
            Me.columnGrupoFamiliarComponen = MyBase.Columns("GrupoFamiliarComponen")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnResponsable_RutResponsable = New Global.System.Data.DataColumn("Responsable_RutResponsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable_RutResponsable)
            Me.columnAlumno_RutAlumno = New Global.System.Data.DataColumn("Alumno_RutAlumno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlumno_RutAlumno)
            Me.columnTipo_responsable_idTipo_responsable = New Global.System.Data.DataColumn("Tipo_responsable_idTipo_responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo_responsable_idTipo_responsable)
            Me.columnApoderado = New Global.System.Data.DataColumn("Apoderado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApoderado)
            Me.columnApoderadoSuplente = New Global.System.Data.DataColumn("ApoderadoSuplente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApoderadoSuplente)
            Me.columnAlumnoViveCon = New Global.System.Data.DataColumn("AlumnoViveCon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlumnoViveCon)
            Me.columnNumHijosFamilia = New Global.System.Data.DataColumn("NumHijosFamilia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumHijosFamilia)
            Me.columnLugarOcupacionHijos = New Global.System.Data.DataColumn("LugarOcupacionHijos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLugarOcupacionHijos)
            Me.columnGrupoFamiliarComponen = New Global.System.Data.DataColumn("GrupoFamiliarComponen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrupoFamiliarComponen)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnResponsable_RutResponsable, Me.columnAlumno_RutAlumno, Me.columnTipo_responsable_idTipo_responsable}, true))
            Me.columnResponsable_RutResponsable.AllowDBNull = false
            Me.columnResponsable_RutResponsable.MaxLength = 20
            Me.columnAlumno_RutAlumno.AllowDBNull = false
            Me.columnAlumno_RutAlumno.MaxLength = 45
            Me.columnTipo_responsable_idTipo_responsable.AllowDBNull = false
            Me.columnTipo_responsable_idTipo_responsable.MaxLength = 20
            Me.columnAlumnoViveCon.MaxLength = 45
            Me.columnNumHijosFamilia.MaxLength = 45
            Me.columnLugarOcupacionHijos.MaxLength = 45
            Me.columnGrupoFamiliarComponen.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newresponsable_alumnoRow() As responsable_alumnoRow
            Return CType(Me.NewRow,responsable_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New responsable_alumnoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(responsable_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.responsable_alumnoRowChangedEvent) Is Nothing) Then
                RaiseEvent responsable_alumnoRowChanged(Me, New responsable_alumnoRowChangeEvent(CType(e.Row,responsable_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.responsable_alumnoRowChangingEvent) Is Nothing) Then
                RaiseEvent responsable_alumnoRowChanging(Me, New responsable_alumnoRowChangeEvent(CType(e.Row,responsable_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.responsable_alumnoRowDeletedEvent) Is Nothing) Then
                RaiseEvent responsable_alumnoRowDeleted(Me, New responsable_alumnoRowChangeEvent(CType(e.Row,responsable_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.responsable_alumnoRowDeletingEvent) Is Nothing) Then
                RaiseEvent responsable_alumnoRowDeleting(Me, New responsable_alumnoRowChangeEvent(CType(e.Row,responsable_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeresponsable_alumnoRow(ByVal row As responsable_alumnoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "responsable_alumnoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class servicio_por_alumnoDataTable
        Inherits Global.System.Data.TypedTableBase(Of servicio_por_alumnoRow)
        
        Private columnAlumno_RutAlumno As Global.System.Data.DataColumn
        
        Private columnServicio_salud_idServicio_salud As Global.System.Data.DataColumn
        
        Private columnSeguros As Global.System.Data.DataColumn
        
        Private columnOtrosServicios As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "servicio_por_alumno"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Alumno_RutAlumnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlumno_RutAlumno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Servicio_salud_idServicio_saludColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServicio_salud_idServicio_salud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SegurosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeguros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtrosServiciosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtrosServicios
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As servicio_por_alumnoRow
            Get
                Return CType(Me.Rows(index),servicio_por_alumnoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_por_alumnoRowChanging As servicio_por_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_por_alumnoRowChanged As servicio_por_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_por_alumnoRowDeleting As servicio_por_alumnoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_por_alumnoRowDeleted As servicio_por_alumnoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addservicio_por_alumnoRow(ByVal row As servicio_por_alumnoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addservicio_por_alumnoRow(ByVal parentalumnoRowByfk_Servicio_salud_has_Alumno_Alumno1 As alumnoRow, ByVal parentservicio_saludRowByfk_Servicio_salud_has_Alumno_Servicio_salud1 As servicio_saludRow, ByVal Seguros As String, ByVal OtrosServicios As String) As servicio_por_alumnoRow
            Dim rowservicio_por_alumnoRow As servicio_por_alumnoRow = CType(Me.NewRow,servicio_por_alumnoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Seguros, OtrosServicios}
            If (Not (parentalumnoRowByfk_Servicio_salud_has_Alumno_Alumno1) Is Nothing) Then
                columnValuesArray(0) = parentalumnoRowByfk_Servicio_salud_has_Alumno_Alumno1(0)
            End If
            If (Not (parentservicio_saludRowByfk_Servicio_salud_has_Alumno_Servicio_salud1) Is Nothing) Then
                columnValuesArray(1) = parentservicio_saludRowByfk_Servicio_salud_has_Alumno_Servicio_salud1(0)
            End If
            rowservicio_por_alumnoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowservicio_por_alumnoRow)
            Return rowservicio_por_alumnoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAlumno_RutAlumnoServicio_salud_idServicio_salud(ByVal Alumno_RutAlumno As String, ByVal Servicio_salud_idServicio_salud As String) As servicio_por_alumnoRow
            Return CType(Me.Rows.Find(New Object() {Alumno_RutAlumno, Servicio_salud_idServicio_salud}),servicio_por_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As servicio_por_alumnoDataTable = CType(MyBase.Clone,servicio_por_alumnoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New servicio_por_alumnoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAlumno_RutAlumno = MyBase.Columns("Alumno_RutAlumno")
            Me.columnServicio_salud_idServicio_salud = MyBase.Columns("Servicio_salud_idServicio_salud")
            Me.columnSeguros = MyBase.Columns("Seguros")
            Me.columnOtrosServicios = MyBase.Columns("OtrosServicios")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAlumno_RutAlumno = New Global.System.Data.DataColumn("Alumno_RutAlumno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlumno_RutAlumno)
            Me.columnServicio_salud_idServicio_salud = New Global.System.Data.DataColumn("Servicio_salud_idServicio_salud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServicio_salud_idServicio_salud)
            Me.columnSeguros = New Global.System.Data.DataColumn("Seguros", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeguros)
            Me.columnOtrosServicios = New Global.System.Data.DataColumn("OtrosServicios", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtrosServicios)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAlumno_RutAlumno, Me.columnServicio_salud_idServicio_salud}, true))
            Me.columnAlumno_RutAlumno.AllowDBNull = false
            Me.columnAlumno_RutAlumno.MaxLength = 45
            Me.columnServicio_salud_idServicio_salud.AllowDBNull = false
            Me.columnServicio_salud_idServicio_salud.MaxLength = 50
            Me.columnSeguros.MaxLength = 45
            Me.columnOtrosServicios.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newservicio_por_alumnoRow() As servicio_por_alumnoRow
            Return CType(Me.NewRow,servicio_por_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New servicio_por_alumnoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(servicio_por_alumnoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.servicio_por_alumnoRowChangedEvent) Is Nothing) Then
                RaiseEvent servicio_por_alumnoRowChanged(Me, New servicio_por_alumnoRowChangeEvent(CType(e.Row,servicio_por_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.servicio_por_alumnoRowChangingEvent) Is Nothing) Then
                RaiseEvent servicio_por_alumnoRowChanging(Me, New servicio_por_alumnoRowChangeEvent(CType(e.Row,servicio_por_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.servicio_por_alumnoRowDeletedEvent) Is Nothing) Then
                RaiseEvent servicio_por_alumnoRowDeleted(Me, New servicio_por_alumnoRowChangeEvent(CType(e.Row,servicio_por_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.servicio_por_alumnoRowDeletingEvent) Is Nothing) Then
                RaiseEvent servicio_por_alumnoRowDeleting(Me, New servicio_por_alumnoRowChangeEvent(CType(e.Row,servicio_por_alumnoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeservicio_por_alumnoRow(ByVal row As servicio_por_alumnoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "servicio_por_alumnoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class servicio_saludDataTable
        Inherits Global.System.Data.TypedTableBase(Of servicio_saludRow)
        
        Private columnidServicio_salud As Global.System.Data.DataColumn
        
        Private columnPlanSalud As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "servicio_salud"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idServicio_saludColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidServicio_salud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PlanSaludColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlanSalud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As servicio_saludRow
            Get
                Return CType(Me.Rows(index),servicio_saludRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_saludRowChanging As servicio_saludRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_saludRowChanged As servicio_saludRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_saludRowDeleting As servicio_saludRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event servicio_saludRowDeleted As servicio_saludRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addservicio_saludRow(ByVal row As servicio_saludRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addservicio_saludRow(ByVal idServicio_salud As String, ByVal PlanSalud As String) As servicio_saludRow
            Dim rowservicio_saludRow As servicio_saludRow = CType(Me.NewRow,servicio_saludRow)
            Dim columnValuesArray() As Object = New Object() {idServicio_salud, PlanSalud}
            rowservicio_saludRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowservicio_saludRow)
            Return rowservicio_saludRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidServicio_salud(ByVal idServicio_salud As String) As servicio_saludRow
            Return CType(Me.Rows.Find(New Object() {idServicio_salud}),servicio_saludRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As servicio_saludDataTable = CType(MyBase.Clone,servicio_saludDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New servicio_saludDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidServicio_salud = MyBase.Columns("idServicio_salud")
            Me.columnPlanSalud = MyBase.Columns("PlanSalud")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidServicio_salud = New Global.System.Data.DataColumn("idServicio_salud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidServicio_salud)
            Me.columnPlanSalud = New Global.System.Data.DataColumn("PlanSalud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlanSalud)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidServicio_salud}, true))
            Me.columnidServicio_salud.AllowDBNull = false
            Me.columnidServicio_salud.Unique = true
            Me.columnidServicio_salud.MaxLength = 50
            Me.columnPlanSalud.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newservicio_saludRow() As servicio_saludRow
            Return CType(Me.NewRow,servicio_saludRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New servicio_saludRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(servicio_saludRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.servicio_saludRowChangedEvent) Is Nothing) Then
                RaiseEvent servicio_saludRowChanged(Me, New servicio_saludRowChangeEvent(CType(e.Row,servicio_saludRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.servicio_saludRowChangingEvent) Is Nothing) Then
                RaiseEvent servicio_saludRowChanging(Me, New servicio_saludRowChangeEvent(CType(e.Row,servicio_saludRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.servicio_saludRowDeletedEvent) Is Nothing) Then
                RaiseEvent servicio_saludRowDeleted(Me, New servicio_saludRowChangeEvent(CType(e.Row,servicio_saludRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.servicio_saludRowDeletingEvent) Is Nothing) Then
                RaiseEvent servicio_saludRowDeleting(Me, New servicio_saludRowChangeEvent(CType(e.Row,servicio_saludRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeservicio_saludRow(ByVal row As servicio_saludRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "servicio_saludDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class telefonoDataTable
        Inherits Global.System.Data.TypedTableBase(Of telefonoRow)
        
        Private columnidTelefono As Global.System.Data.DataColumn
        
        Private columnNumFijo As Global.System.Data.DataColumn
        
        Private columnNumCelular As Global.System.Data.DataColumn
        
        Private columnResponsable_RutResponsable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "telefono"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idTelefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidTelefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumFijoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumFijo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumCelularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumCelular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Responsable_RutResponsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable_RutResponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As telefonoRow
            Get
                Return CType(Me.Rows(index),telefonoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event telefonoRowChanging As telefonoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event telefonoRowChanged As telefonoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event telefonoRowDeleting As telefonoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event telefonoRowDeleted As telefonoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtelefonoRow(ByVal row As telefonoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtelefonoRow(ByVal idTelefono As String, ByVal NumFijo As String, ByVal NumCelular As String, ByVal parentresponsableRowByfk_Telefono_Responsable1 As responsableRow) As telefonoRow
            Dim rowtelefonoRow As telefonoRow = CType(Me.NewRow,telefonoRow)
            Dim columnValuesArray() As Object = New Object() {idTelefono, NumFijo, NumCelular, Nothing}
            If (Not (parentresponsableRowByfk_Telefono_Responsable1) Is Nothing) Then
                columnValuesArray(3) = parentresponsableRowByfk_Telefono_Responsable1(0)
            End If
            rowtelefonoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtelefonoRow)
            Return rowtelefonoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidTelefono(ByVal idTelefono As String) As telefonoRow
            Return CType(Me.Rows.Find(New Object() {idTelefono}),telefonoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As telefonoDataTable = CType(MyBase.Clone,telefonoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New telefonoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidTelefono = MyBase.Columns("idTelefono")
            Me.columnNumFijo = MyBase.Columns("NumFijo")
            Me.columnNumCelular = MyBase.Columns("NumCelular")
            Me.columnResponsable_RutResponsable = MyBase.Columns("Responsable_RutResponsable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidTelefono = New Global.System.Data.DataColumn("idTelefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidTelefono)
            Me.columnNumFijo = New Global.System.Data.DataColumn("NumFijo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumFijo)
            Me.columnNumCelular = New Global.System.Data.DataColumn("NumCelular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumCelular)
            Me.columnResponsable_RutResponsable = New Global.System.Data.DataColumn("Responsable_RutResponsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable_RutResponsable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidTelefono}, true))
            Me.columnidTelefono.AllowDBNull = false
            Me.columnidTelefono.Unique = true
            Me.columnidTelefono.MaxLength = 10
            Me.columnNumFijo.MaxLength = 20
            Me.columnNumCelular.MaxLength = 20
            Me.columnResponsable_RutResponsable.AllowDBNull = false
            Me.columnResponsable_RutResponsable.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtelefonoRow() As telefonoRow
            Return CType(Me.NewRow,telefonoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New telefonoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(telefonoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.telefonoRowChangedEvent) Is Nothing) Then
                RaiseEvent telefonoRowChanged(Me, New telefonoRowChangeEvent(CType(e.Row,telefonoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.telefonoRowChangingEvent) Is Nothing) Then
                RaiseEvent telefonoRowChanging(Me, New telefonoRowChangeEvent(CType(e.Row,telefonoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.telefonoRowDeletedEvent) Is Nothing) Then
                RaiseEvent telefonoRowDeleted(Me, New telefonoRowChangeEvent(CType(e.Row,telefonoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.telefonoRowDeletingEvent) Is Nothing) Then
                RaiseEvent telefonoRowDeleting(Me, New telefonoRowChangeEvent(CType(e.Row,telefonoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetelefonoRow(ByVal row As telefonoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "telefonoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tipo_responsableDataTable
        Inherits Global.System.Data.TypedTableBase(Of tipo_responsableRow)
        
        Private columnidTipo_responsable As Global.System.Data.DataColumn
        
        Private columnTipo_responsable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tipo_responsable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idTipo_responsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidTipo_responsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Tipo_responsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo_responsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tipo_responsableRow
            Get
                Return CType(Me.Rows(index),tipo_responsableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tipo_responsableRowChanging As tipo_responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tipo_responsableRowChanged As tipo_responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tipo_responsableRowDeleting As tipo_responsableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tipo_responsableRowDeleted As tipo_responsableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addtipo_responsableRow(ByVal row As tipo_responsableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addtipo_responsableRow(ByVal idTipo_responsable As String, ByVal Tipo_responsable As String) As tipo_responsableRow
            Dim rowtipo_responsableRow As tipo_responsableRow = CType(Me.NewRow,tipo_responsableRow)
            Dim columnValuesArray() As Object = New Object() {idTipo_responsable, Tipo_responsable}
            rowtipo_responsableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtipo_responsableRow)
            Return rowtipo_responsableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByidTipo_responsable(ByVal idTipo_responsable As String) As tipo_responsableRow
            Return CType(Me.Rows.Find(New Object() {idTipo_responsable}),tipo_responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tipo_responsableDataTable = CType(MyBase.Clone,tipo_responsableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tipo_responsableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnidTipo_responsable = MyBase.Columns("idTipo_responsable")
            Me.columnTipo_responsable = MyBase.Columns("Tipo_responsable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnidTipo_responsable = New Global.System.Data.DataColumn("idTipo_responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidTipo_responsable)
            Me.columnTipo_responsable = New Global.System.Data.DataColumn("Tipo_responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo_responsable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnidTipo_responsable}, true))
            Me.columnidTipo_responsable.AllowDBNull = false
            Me.columnidTipo_responsable.Unique = true
            Me.columnidTipo_responsable.MaxLength = 20
            Me.columnTipo_responsable.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newtipo_responsableRow() As tipo_responsableRow
            Return CType(Me.NewRow,tipo_responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tipo_responsableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tipo_responsableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tipo_responsableRowChangedEvent) Is Nothing) Then
                RaiseEvent tipo_responsableRowChanged(Me, New tipo_responsableRowChangeEvent(CType(e.Row,tipo_responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tipo_responsableRowChangingEvent) Is Nothing) Then
                RaiseEvent tipo_responsableRowChanging(Me, New tipo_responsableRowChangeEvent(CType(e.Row,tipo_responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tipo_responsableRowDeletedEvent) Is Nothing) Then
                RaiseEvent tipo_responsableRowDeleted(Me, New tipo_responsableRowChangeEvent(CType(e.Row,tipo_responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tipo_responsableRowDeletingEvent) Is Nothing) Then
                RaiseEvent tipo_responsableRowDeleting(Me, New tipo_responsableRowChangeEvent(CType(e.Row,tipo_responsableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removetipo_responsableRow(ByVal row As tipo_responsableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As bd_echaurrenDataSet = New bd_echaurrenDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tipo_responsableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class alumnoRow
        Inherits Global.System.Data.DataRow
        
        Private tablealumno As alumnoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablealumno = CType(Me.Table,alumnoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RutAlumno() As String
            Get
                Return CType(Me(Me.tablealumno.RutAlumnoColumn),String)
            End Get
            Set
                Me(Me.tablealumno.RutAlumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCompleto() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.NombreCompletoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCompleto' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.NombreCompletoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApePaterno() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.ApePaternoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ApePaterno' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.ApePaternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApeMaterno() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.ApeMaternoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ApeMaterno' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.ApeMaternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaNac() As Date
            Get
                Try 
                    Return CType(Me(Me.tablealumno.FechaNacColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaNac' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.FechaNacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Domicilio_calle_() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno._Domicilio_calle_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Domicilio(calle)' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno._Domicilio_calle_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SectorVilla() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.SectorVillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SectorVilla' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.SectorVillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comuna() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.ComunaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Comuna' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.ComunaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.TelefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Telefono' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.TelefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColegioPresedencia() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.ColegioPresedenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ColegioPresedencia' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.ColegioPresedenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Curso() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.CursoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Curso' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.CursoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CursosRepetidos() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.CursosRepetidosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CursosRepetidos' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.CursosRepetidosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Becado() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablealumno.BecadoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Becado' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.BecadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HermanosEstablecimiento() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.HermanosEstablecimientoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HermanosEstablecimiento' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.HermanosEstablecimientoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AntecedentesMedicos() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.AntecedentesMedicosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AntecedentesMedicos' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.AntecedentesMedicosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumMatricula() As String
            Get
                Try 
                    Return CType(Me(Me.tablealumno.NumMatriculaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumMatricula' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.NumMatriculaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaMatricula() As Date
            Get
                Try 
                    Return CType(Me(Me.tablealumno.FechaMatriculaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaMatricula' de la tabla 'alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablealumno.FechaMatriculaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreCompletoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.NombreCompletoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreCompletoNull()
            Me(Me.tablealumno.NombreCompletoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApePaternoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.ApePaternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApePaternoNull()
            Me(Me.tablealumno.ApePaternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApeMaternoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.ApeMaternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApeMaternoNull()
            Me(Me.tablealumno.ApeMaternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaNacNull() As Boolean
            Return Me.IsNull(Me.tablealumno.FechaNacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaNacNull()
            Me(Me.tablealumno.FechaNacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_Domicilio_calle_Null() As Boolean
            Return Me.IsNull(Me.tablealumno._Domicilio_calle_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_Domicilio_calle_Null()
            Me(Me.tablealumno._Domicilio_calle_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSectorVillaNull() As Boolean
            Return Me.IsNull(Me.tablealumno.SectorVillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSectorVillaNull()
            Me(Me.tablealumno.SectorVillaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComunaNull() As Boolean
            Return Me.IsNull(Me.tablealumno.ComunaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComunaNull()
            Me(Me.tablealumno.ComunaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelefonoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.TelefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelefonoNull()
            Me(Me.tablealumno.TelefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColegioPresedenciaNull() As Boolean
            Return Me.IsNull(Me.tablealumno.ColegioPresedenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColegioPresedenciaNull()
            Me(Me.tablealumno.ColegioPresedenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCursoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.CursoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCursoNull()
            Me(Me.tablealumno.CursoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCursosRepetidosNull() As Boolean
            Return Me.IsNull(Me.tablealumno.CursosRepetidosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCursosRepetidosNull()
            Me(Me.tablealumno.CursosRepetidosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBecadoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.BecadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBecadoNull()
            Me(Me.tablealumno.BecadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHermanosEstablecimientoNull() As Boolean
            Return Me.IsNull(Me.tablealumno.HermanosEstablecimientoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHermanosEstablecimientoNull()
            Me(Me.tablealumno.HermanosEstablecimientoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAntecedentesMedicosNull() As Boolean
            Return Me.IsNull(Me.tablealumno.AntecedentesMedicosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAntecedentesMedicosNull()
            Me(Me.tablealumno.AntecedentesMedicosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumMatriculaNull() As Boolean
            Return Me.IsNull(Me.tablealumno.NumMatriculaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumMatriculaNull()
            Me(Me.tablealumno.NumMatriculaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaMatriculaNull() As Boolean
            Return Me.IsNull(Me.tablealumno.FechaMatriculaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaMatriculaNull()
            Me(Me.tablealumno.FechaMatriculaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getcontacto_emergenciaRows() As contacto_emergenciaRow()
            If (Me.Table.ChildRelations("fk_Contacto_emergencia_Alumno1") Is Nothing) Then
                Return New contacto_emergenciaRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Contacto_emergencia_Alumno1")),contacto_emergenciaRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getresponsable_alumnoRows() As responsable_alumnoRow()
            If (Me.Table.ChildRelations("fk_Responsable_alumno_Alumno1") Is Nothing) Then
                Return New responsable_alumnoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Responsable_alumno_Alumno1")),responsable_alumnoRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getservicio_por_alumnoRows() As servicio_por_alumnoRow()
            If (Me.Table.ChildRelations("fk_Servicio_salud_has_Alumno_Alumno1") Is Nothing) Then
                Return New servicio_por_alumnoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Servicio_salud_has_Alumno_Alumno1")),servicio_por_alumnoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class contacto_emergenciaRow
        Inherits Global.System.Data.DataRow
        
        Private tablecontacto_emergencia As contacto_emergenciaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecontacto_emergencia = CType(Me.Table,contacto_emergenciaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idContacto_emergencia() As String
            Get
                Return CType(Me(Me.tablecontacto_emergencia.idContacto_emergenciaColumn),String)
            End Get
            Set
                Me(Me.tablecontacto_emergencia.idContacto_emergenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreContacto() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontacto_emergencia.NombreContactoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreContacto' de la tabla 'contacto_emergencia' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontacto_emergencia.NombreContactoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Numero() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontacto_emergencia.NumeroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Numero' de la tabla 'contacto_emergencia' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontacto_emergencia.NumeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Alumno_RutAlumno() As String
            Get
                Return CType(Me(Me.tablecontacto_emergencia.Alumno_RutAlumnoColumn),String)
            End Get
            Set
                Me(Me.tablecontacto_emergencia.Alumno_RutAlumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property alumnoRow() As alumnoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Contacto_emergencia_Alumno1")),alumnoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Contacto_emergencia_Alumno1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreContactoNull() As Boolean
            Return Me.IsNull(Me.tablecontacto_emergencia.NombreContactoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreContactoNull()
            Me(Me.tablecontacto_emergencia.NombreContactoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroNull() As Boolean
            Return Me.IsNull(Me.tablecontacto_emergencia.NumeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroNull()
            Me(Me.tablecontacto_emergencia.NumeroColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class direccionRow
        Inherits Global.System.Data.DataRow
        
        Private tabledireccion As direccionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledireccion = CType(Me.Table,direccionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idDireccion() As String
            Get
                Return CType(Me(Me.tabledireccion.idDireccionColumn),String)
            End Get
            Set
                Me(Me.tabledireccion.idDireccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCalle() As String
            Get
                Try 
                    Return CType(Me(Me.tabledireccion.NombreCalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCalle' de la tabla 'direccion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledireccion.NombreCalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Numero() As String
            Get
                Try 
                    Return CType(Me(Me.tabledireccion.NumeroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Numero' de la tabla 'direccion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledireccion.NumeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comuna() As String
            Get
                Try 
                    Return CType(Me(Me.tabledireccion.ComunaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Comuna' de la tabla 'direccion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledireccion.ComunaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sector() As String
            Get
                Try 
                    Return CType(Me(Me.tabledireccion.SectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Sector' de la tabla 'direccion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledireccion.SectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable_RutResponsable() As String
            Get
                Return CType(Me(Me.tabledireccion.Responsable_RutResponsableColumn),String)
            End Get
            Set
                Me(Me.tabledireccion.Responsable_RutResponsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property responsableRow() As responsableRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Direccion_Responsable1")),responsableRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Direccion_Responsable1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreCalleNull() As Boolean
            Return Me.IsNull(Me.tabledireccion.NombreCalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreCalleNull()
            Me(Me.tabledireccion.NombreCalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroNull() As Boolean
            Return Me.IsNull(Me.tabledireccion.NumeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroNull()
            Me(Me.tabledireccion.NumeroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComunaNull() As Boolean
            Return Me.IsNull(Me.tabledireccion.ComunaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComunaNull()
            Me(Me.tabledireccion.ComunaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSectorNull() As Boolean
            Return Me.IsNull(Me.tabledireccion.SectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSectorNull()
            Me(Me.tabledireccion.SectorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class responsableRow
        Inherits Global.System.Data.DataRow
        
        Private tableresponsable As responsableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableresponsable = CType(Me.Table,responsableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RutResponsable() As String
            Get
                Return CType(Me(Me.tableresponsable.RutResponsableColumn),String)
            End Get
            Set
                Me(Me.tableresponsable.RutResponsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCompleto() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.NombreCompletoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCompleto' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.NombreCompletoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Edad() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.EdadColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Edad' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.EdadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EstudiosCompletados() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.EstudiosCompletadosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EstudiosCompletados' de la tabla 'responsable' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.EstudiosCompletadosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Correo_electronico() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.Correo_electronicoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Correo electronico' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.Correo_electronicoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Trabajo() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.TrabajoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Trabajo' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.TrabajoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cargo() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.CargoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cargo' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.CargoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TelefTrabajo() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.TelefTrabajoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TelefTrabajo' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.TelefTrabajoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DireccionTrabajo() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable.DireccionTrabajoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionTrabajo' de la tabla 'responsable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable.DireccionTrabajoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreCompletoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.NombreCompletoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreCompletoNull()
            Me(Me.tableresponsable.NombreCompletoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEdadNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.EdadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEdadNull()
            Me(Me.tableresponsable.EdadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEstudiosCompletadosNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.EstudiosCompletadosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEstudiosCompletadosNull()
            Me(Me.tableresponsable.EstudiosCompletadosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCorreo_electronicoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.Correo_electronicoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCorreo_electronicoNull()
            Me(Me.tableresponsable.Correo_electronicoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.TrabajoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrabajoNull()
            Me(Me.tableresponsable.TrabajoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCargoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.CargoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCargoNull()
            Me(Me.tableresponsable.CargoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelefTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.TelefTrabajoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelefTrabajoNull()
            Me(Me.tableresponsable.TelefTrabajoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDireccionTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable.DireccionTrabajoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDireccionTrabajoNull()
            Me(Me.tableresponsable.DireccionTrabajoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetdireccionRows() As direccionRow()
            If (Me.Table.ChildRelations("fk_Direccion_Responsable1") Is Nothing) Then
                Return New direccionRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Direccion_Responsable1")),direccionRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getresponsable_alumnoRows() As responsable_alumnoRow()
            If (Me.Table.ChildRelations("fk_Responsable_alumno_Responsable1") Is Nothing) Then
                Return New responsable_alumnoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Responsable_alumno_Responsable1")),responsable_alumnoRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GettelefonoRows() As telefonoRow()
            If (Me.Table.ChildRelations("fk_Telefono_Responsable1") Is Nothing) Then
                Return New telefonoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Telefono_Responsable1")),telefonoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class responsable_alumnoRow
        Inherits Global.System.Data.DataRow
        
        Private tableresponsable_alumno As responsable_alumnoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableresponsable_alumno = CType(Me.Table,responsable_alumnoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable_RutResponsable() As String
            Get
                Return CType(Me(Me.tableresponsable_alumno.Responsable_RutResponsableColumn),String)
            End Get
            Set
                Me(Me.tableresponsable_alumno.Responsable_RutResponsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Alumno_RutAlumno() As String
            Get
                Return CType(Me(Me.tableresponsable_alumno.Alumno_RutAlumnoColumn),String)
            End Get
            Set
                Me(Me.tableresponsable_alumno.Alumno_RutAlumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tipo_responsable_idTipo_responsable() As String
            Get
                Return CType(Me(Me.tableresponsable_alumno.Tipo_responsable_idTipo_responsableColumn),String)
            End Get
            Set
                Me(Me.tableresponsable_alumno.Tipo_responsable_idTipo_responsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Apoderado() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.ApoderadoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Apoderado' de la tabla 'responsable_alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.ApoderadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApoderadoSuplente() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.ApoderadoSuplenteColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ApoderadoSuplente' de la tabla 'responsable_alumno' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.ApoderadoSuplenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlumnoViveCon() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.AlumnoViveConColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AlumnoViveCon' de la tabla 'responsable_alumno' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.AlumnoViveConColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumHijosFamilia() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.NumHijosFamiliaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumHijosFamilia' de la tabla 'responsable_alumno' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.NumHijosFamiliaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LugarOcupacionHijos() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.LugarOcupacionHijosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LugarOcupacionHijos' de la tabla 'responsable_alumno' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.LugarOcupacionHijosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GrupoFamiliarComponen() As String
            Get
                Try 
                    Return CType(Me(Me.tableresponsable_alumno.GrupoFamiliarComponenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GrupoFamiliarComponen' de la tabla 'responsable_alumno' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableresponsable_alumno.GrupoFamiliarComponenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property alumnoRow() As alumnoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Responsable_alumno_Alumno1")),alumnoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Responsable_alumno_Alumno1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property responsableRow() As responsableRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Responsable_alumno_Responsable1")),responsableRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Responsable_alumno_Responsable1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tipo_responsableRow() As tipo_responsableRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Responsable_alumno_Tipo_responsable1")),tipo_responsableRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Responsable_alumno_Tipo_responsable1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApoderadoNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.ApoderadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApoderadoNull()
            Me(Me.tableresponsable_alumno.ApoderadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApoderadoSuplenteNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.ApoderadoSuplenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApoderadoSuplenteNull()
            Me(Me.tableresponsable_alumno.ApoderadoSuplenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlumnoViveConNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.AlumnoViveConColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlumnoViveConNull()
            Me(Me.tableresponsable_alumno.AlumnoViveConColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumHijosFamiliaNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.NumHijosFamiliaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumHijosFamiliaNull()
            Me(Me.tableresponsable_alumno.NumHijosFamiliaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLugarOcupacionHijosNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.LugarOcupacionHijosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLugarOcupacionHijosNull()
            Me(Me.tableresponsable_alumno.LugarOcupacionHijosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrupoFamiliarComponenNull() As Boolean
            Return Me.IsNull(Me.tableresponsable_alumno.GrupoFamiliarComponenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrupoFamiliarComponenNull()
            Me(Me.tableresponsable_alumno.GrupoFamiliarComponenColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class servicio_por_alumnoRow
        Inherits Global.System.Data.DataRow
        
        Private tableservicio_por_alumno As servicio_por_alumnoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableservicio_por_alumno = CType(Me.Table,servicio_por_alumnoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Alumno_RutAlumno() As String
            Get
                Return CType(Me(Me.tableservicio_por_alumno.Alumno_RutAlumnoColumn),String)
            End Get
            Set
                Me(Me.tableservicio_por_alumno.Alumno_RutAlumnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Servicio_salud_idServicio_salud() As String
            Get
                Return CType(Me(Me.tableservicio_por_alumno.Servicio_salud_idServicio_saludColumn),String)
            End Get
            Set
                Me(Me.tableservicio_por_alumno.Servicio_salud_idServicio_saludColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Seguros() As String
            Get
                Try 
                    Return CType(Me(Me.tableservicio_por_alumno.SegurosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Seguros' de la tabla 'servicio_por_alumno' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableservicio_por_alumno.SegurosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtrosServicios() As String
            Get
                Try 
                    Return CType(Me(Me.tableservicio_por_alumno.OtrosServiciosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OtrosServicios' de la tabla 'servicio_por_alumno' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableservicio_por_alumno.OtrosServiciosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property alumnoRow() As alumnoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Servicio_salud_has_Alumno_Alumno1")),alumnoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Servicio_salud_has_Alumno_Alumno1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property servicio_saludRow() As servicio_saludRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Servicio_salud_has_Alumno_Servicio_salud1")),servicio_saludRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Servicio_salud_has_Alumno_Servicio_salud1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSegurosNull() As Boolean
            Return Me.IsNull(Me.tableservicio_por_alumno.SegurosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSegurosNull()
            Me(Me.tableservicio_por_alumno.SegurosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtrosServiciosNull() As Boolean
            Return Me.IsNull(Me.tableservicio_por_alumno.OtrosServiciosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtrosServiciosNull()
            Me(Me.tableservicio_por_alumno.OtrosServiciosColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class servicio_saludRow
        Inherits Global.System.Data.DataRow
        
        Private tableservicio_salud As servicio_saludDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableservicio_salud = CType(Me.Table,servicio_saludDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idServicio_salud() As String
            Get
                Return CType(Me(Me.tableservicio_salud.idServicio_saludColumn),String)
            End Get
            Set
                Me(Me.tableservicio_salud.idServicio_saludColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PlanSalud() As String
            Get
                Try 
                    Return CType(Me(Me.tableservicio_salud.PlanSaludColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PlanSalud' de la tabla 'servicio_salud' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableservicio_salud.PlanSaludColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPlanSaludNull() As Boolean
            Return Me.IsNull(Me.tableservicio_salud.PlanSaludColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPlanSaludNull()
            Me(Me.tableservicio_salud.PlanSaludColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getservicio_por_alumnoRows() As servicio_por_alumnoRow()
            If (Me.Table.ChildRelations("fk_Servicio_salud_has_Alumno_Servicio_salud1") Is Nothing) Then
                Return New servicio_por_alumnoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Servicio_salud_has_Alumno_Servicio_salud1")),servicio_por_alumnoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class telefonoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletelefono As telefonoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletelefono = CType(Me.Table,telefonoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idTelefono() As String
            Get
                Return CType(Me(Me.tabletelefono.idTelefonoColumn),String)
            End Get
            Set
                Me(Me.tabletelefono.idTelefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumFijo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletelefono.NumFijoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumFijo' de la tabla 'telefono' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletelefono.NumFijoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumCelular() As String
            Get
                Try 
                    Return CType(Me(Me.tabletelefono.NumCelularColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumCelular' de la tabla 'telefono' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletelefono.NumCelularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable_RutResponsable() As String
            Get
                Return CType(Me(Me.tabletelefono.Responsable_RutResponsableColumn),String)
            End Get
            Set
                Me(Me.tabletelefono.Responsable_RutResponsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property responsableRow() As responsableRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_Telefono_Responsable1")),responsableRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_Telefono_Responsable1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumFijoNull() As Boolean
            Return Me.IsNull(Me.tabletelefono.NumFijoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumFijoNull()
            Me(Me.tabletelefono.NumFijoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumCelularNull() As Boolean
            Return Me.IsNull(Me.tabletelefono.NumCelularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumCelularNull()
            Me(Me.tabletelefono.NumCelularColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tipo_responsableRow
        Inherits Global.System.Data.DataRow
        
        Private tabletipo_responsable As tipo_responsableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletipo_responsable = CType(Me.Table,tipo_responsableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property idTipo_responsable() As String
            Get
                Return CType(Me(Me.tabletipo_responsable.idTipo_responsableColumn),String)
            End Get
            Set
                Me(Me.tabletipo_responsable.idTipo_responsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tipo_responsable() As String
            Get
                Try 
                    Return CType(Me(Me.tabletipo_responsable.Tipo_responsableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tipo_responsable' de la tabla 'tipo_responsable' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletipo_responsable.Tipo_responsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTipo_responsableNull() As Boolean
            Return Me.IsNull(Me.tabletipo_responsable.Tipo_responsableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTipo_responsableNull()
            Me(Me.tabletipo_responsable.Tipo_responsableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getresponsable_alumnoRows() As responsable_alumnoRow()
            If (Me.Table.ChildRelations("fk_Responsable_alumno_Tipo_responsable1") Is Nothing) Then
                Return New responsable_alumnoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_Responsable_alumno_Tipo_responsable1")),responsable_alumnoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class alumnoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As alumnoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As alumnoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As alumnoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class contacto_emergenciaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As contacto_emergenciaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As contacto_emergenciaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As contacto_emergenciaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class direccionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As direccionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As direccionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As direccionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class responsableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As responsableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As responsableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As responsableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class responsable_alumnoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As responsable_alumnoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As responsable_alumnoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As responsable_alumnoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class servicio_por_alumnoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As servicio_por_alumnoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As servicio_por_alumnoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As servicio_por_alumnoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class servicio_saludRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As servicio_saludRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As servicio_saludRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As servicio_saludRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class telefonoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As telefonoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As telefonoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As telefonoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tipo_responsableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tipo_responsableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tipo_responsableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tipo_responsableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace bd_echaurrenDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class alumnoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "alumno"
            tableMapping.ColumnMappings.Add("RutAlumno", "RutAlumno")
            tableMapping.ColumnMappings.Add("NombreCompleto", "NombreCompleto")
            tableMapping.ColumnMappings.Add("ApePaterno", "ApePaterno")
            tableMapping.ColumnMappings.Add("ApeMaterno", "ApeMaterno")
            tableMapping.ColumnMappings.Add("FechaNac", "FechaNac")
            tableMapping.ColumnMappings.Add("Domicilio(calle)", "Domicilio(calle)")
            tableMapping.ColumnMappings.Add("SectorVilla", "SectorVilla")
            tableMapping.ColumnMappings.Add("Comuna", "Comuna")
            tableMapping.ColumnMappings.Add("Telefono", "Telefono")
            tableMapping.ColumnMappings.Add("ColegioPresedencia", "ColegioPresedencia")
            tableMapping.ColumnMappings.Add("Curso", "Curso")
            tableMapping.ColumnMappings.Add("CursosRepetidos", "CursosRepetidos")
            tableMapping.ColumnMappings.Add("Becado", "Becado")
            tableMapping.ColumnMappings.Add("HermanosEstablecimiento", "HermanosEstablecimiento")
            tableMapping.ColumnMappings.Add("AntecedentesMedicos", "AntecedentesMedicos")
            tableMapping.ColumnMappings.Add("NumMatricula", "NumMatricula")
            tableMapping.ColumnMappings.Add("FechaMatricula", "FechaMatricula")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `alumno` WHERE ((`RutAlumno` = @Original_RutAlumno) AND ((@IsNull_Nom"& _ 
                "breCompleto = 1 AND `NombreCompleto` IS NULL) OR (`NombreCompleto` = @Original_N"& _ 
                "ombreCompleto)) AND ((@IsNull_ApePaterno = 1 AND `ApePaterno` IS NULL) OR (`ApeP"& _ 
                "aterno` = @Original_ApePaterno)) AND ((@IsNull_ApeMaterno = 1 AND `ApeMaterno` I"& _ 
                "S NULL) OR (`ApeMaterno` = @Original_ApeMaterno)) AND ((@IsNull_FechaNac = 1 AND"& _ 
                " `FechaNac` IS NULL) OR (`FechaNac` = @Original_FechaNac)) AND ((@p3 = 1 AND `Do"& _ 
                "micilio(calle)` IS NULL) OR (`Domicilio(calle)` = @p2)) AND ((@IsNull_SectorVill"& _ 
                "a = 1 AND `SectorVilla` IS NULL) OR (`SectorVilla` = @Original_SectorVilla)) AND"& _ 
                " ((@IsNull_Comuna = 1 AND `Comuna` IS NULL) OR (`Comuna` = @Original_Comuna)) AN"& _ 
                "D ((@IsNull_Telefono = 1 AND `Telefono` IS NULL) OR (`Telefono` = @Original_Tele"& _ 
                "fono)) AND ((@IsNull_ColegioPresedencia = 1 AND `ColegioPresedencia` IS NULL) OR"& _ 
                " (`ColegioPresedencia` = @Original_ColegioPresedencia)) AND ((@IsNull_Curso = 1 "& _ 
                "AND `Curso` IS NULL) OR (`Curso` = @Original_Curso)) AND ((@IsNull_CursosRepetid"& _ 
                "os = 1 AND `CursosRepetidos` IS NULL) OR (`CursosRepetidos` = @Original_CursosRe"& _ 
                "petidos)) AND ((@IsNull_Becado = 1 AND `Becado` IS NULL) OR (`Becado` = @Origina"& _ 
                "l_Becado)) AND ((@IsNull_HermanosEstablecimiento = 1 AND `HermanosEstablecimient"& _ 
                "o` IS NULL) OR (`HermanosEstablecimiento` = @Original_HermanosEstablecimiento)) "& _ 
                "AND ((@IsNull_AntecedentesMedicos = 1 AND `AntecedentesMedicos` IS NULL) OR (`An"& _ 
                "tecedentesMedicos` = @Original_AntecedentesMedicos)) AND ((@IsNull_NumMatricula "& _ 
                "= 1 AND `NumMatricula` IS NULL) OR (`NumMatricula` = @Original_NumMatricula)) AN"& _ 
                "D ((@IsNull_FechaMatricula = 1 AND `FechaMatricula` IS NULL) OR (`FechaMatricula"& _ 
                "` = @Original_FechaMatricula)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCompleto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApePaterno"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApePaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApeMaterno"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApeMaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_FechaNac"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_FechaNac"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_SectorVilla"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_SectorVilla"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Comuna"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Telefono"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Curso"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Curso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Curso"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Curso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_CursosRepetidos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CursosRepetidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Becado"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Becado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Becado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Becado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumMatricula"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumMatricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_FechaMatricula"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_FechaMatricula"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `alumno` (`RutAlumno`, `NombreCompleto`, `ApePaterno`, `ApeMaterno`, "& _ 
                "`FechaNac`, `Domicilio(calle)`, `SectorVilla`, `Comuna`, `Telefono`, `ColegioPre"& _ 
                "sedencia`, `Curso`, `CursosRepetidos`, `Becado`, `HermanosEstablecimiento`, `Ant"& _ 
                "ecedentesMedicos`, `NumMatricula`, `FechaMatricula`) VALUES (@RutAlumno, @Nombre"& _ 
                "Completo, @ApePaterno, @ApeMaterno, @FechaNac, @p1, @SectorVilla, @Comuna, @Tele"& _ 
                "fono, @ColegioPresedencia, @Curso, @CursosRepetidos, @Becado, @HermanosEstableci"& _ 
                "miento, @AntecedentesMedicos, @NumMatricula, @FechaMatricula)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutAlumno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApePaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApeMaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@FechaNac"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@SectorVilla"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Curso"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Curso"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@CursosRepetidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Becado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Becado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumMatricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@FechaMatricula"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `alumno` SET `RutAlumno` = @RutAlumno, `NombreCompleto` = @NombreCompleto,"& _ 
                " `ApePaterno` = @ApePaterno, `ApeMaterno` = @ApeMaterno, `FechaNac` = @FechaNac,"& _ 
                " `Domicilio(calle)` = @p1, `SectorVilla` = @SectorVilla, `Comuna` = @Comuna, `Te"& _ 
                "lefono` = @Telefono, `ColegioPresedencia` = @ColegioPresedencia, `Curso` = @Curs"& _ 
                "o, `CursosRepetidos` = @CursosRepetidos, `Becado` = @Becado, `HermanosEstablecim"& _ 
                "iento` = @HermanosEstablecimiento, `AntecedentesMedicos` = @AntecedentesMedicos,"& _ 
                " `NumMatricula` = @NumMatricula, `FechaMatricula` = @FechaMatricula WHERE ((`Rut"& _ 
                "Alumno` = @Original_RutAlumno) AND ((@IsNull_NombreCompleto = 1 AND `NombreCompl"& _ 
                "eto` IS NULL) OR (`NombreCompleto` = @Original_NombreCompleto)) AND ((@IsNull_Ap"& _ 
                "ePaterno = 1 AND `ApePaterno` IS NULL) OR (`ApePaterno` = @Original_ApePaterno))"& _ 
                " AND ((@IsNull_ApeMaterno = 1 AND `ApeMaterno` IS NULL) OR (`ApeMaterno` = @Orig"& _ 
                "inal_ApeMaterno)) AND ((@IsNull_FechaNac = 1 AND `FechaNac` IS NULL) OR (`FechaN"& _ 
                "ac` = @Original_FechaNac)) AND ((@p3 = 1 AND `Domicilio(calle)` IS NULL) OR (`Do"& _ 
                "micilio(calle)` = @p2)) AND ((@IsNull_SectorVilla = 1 AND `SectorVilla` IS NULL)"& _ 
                " OR (`SectorVilla` = @Original_SectorVilla)) AND ((@IsNull_Comuna = 1 AND `Comun"& _ 
                "a` IS NULL) OR (`Comuna` = @Original_Comuna)) AND ((@IsNull_Telefono = 1 AND `Te"& _ 
                "lefono` IS NULL) OR (`Telefono` = @Original_Telefono)) AND ((@IsNull_ColegioPres"& _ 
                "edencia = 1 AND `ColegioPresedencia` IS NULL) OR (`ColegioPresedencia` = @Origin"& _ 
                "al_ColegioPresedencia)) AND ((@IsNull_Curso = 1 AND `Curso` IS NULL) OR (`Curso`"& _ 
                " = @Original_Curso)) AND ((@IsNull_CursosRepetidos = 1 AND `CursosRepetidos` IS "& _ 
                "NULL) OR (`CursosRepetidos` = @Original_CursosRepetidos)) AND ((@IsNull_Becado ="& _ 
                " 1 AND `Becado` IS NULL) OR (`Becado` = @Original_Becado)) AND ((@IsNull_Hermano"& _ 
                "sEstablecimiento = 1 AND `HermanosEstablecimiento` IS NULL) OR (`HermanosEstable"& _ 
                "cimiento` = @Original_HermanosEstablecimiento)) AND ((@IsNull_AntecedentesMedico"& _ 
                "s = 1 AND `AntecedentesMedicos` IS NULL) OR (`AntecedentesMedicos` = @Original_A"& _ 
                "ntecedentesMedicos)) AND ((@IsNull_NumMatricula = 1 AND `NumMatricula` IS NULL) "& _ 
                "OR (`NumMatricula` = @Original_NumMatricula)) AND ((@IsNull_FechaMatricula = 1 A"& _ 
                "ND `FechaMatricula` IS NULL) OR (`FechaMatricula` = @Original_FechaMatricula)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutAlumno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApePaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApeMaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@FechaNac"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@SectorVilla"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Curso"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Curso"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@CursosRepetidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Becado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Becado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumMatricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@FechaMatricula"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCompleto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApePaterno"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApePaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApePaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApeMaterno"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApeMaterno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ApeMaterno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_FechaNac"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_FechaNac"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaNac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Domicilio(calle)"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_SectorVilla"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_SectorVilla"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "SectorVilla"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Comuna"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Telefono"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ColegioPresedencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ColegioPresedencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Curso"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Curso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Curso"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Curso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_CursosRepetidos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CursosRepetidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CursosRepetidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Becado"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Becado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Becado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Becado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_HermanosEstablecimiento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "HermanosEstablecimiento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AntecedentesMedicos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AntecedentesMedicos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumMatricula"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumMatricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_FechaMatricula"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_FechaMatricula"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.DateTime
            param.IsNullable = true
            param.SourceColumn = "FechaMatricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `RutAlumno`, `NombreCompleto`, `ApePaterno`, `ApeMaterno`, `FechaNac`, `Do"& _ 
                "micilio(calle)`, `SectorVilla`, `Comuna`, `Telefono`, `ColegioPresedencia`, `Cur"& _ 
                "so`, `CursosRepetidos`, `Becado`, `HermanosEstablecimiento`, `AntecedentesMedico"& _ 
                "s`, `NumMatricula`, `FechaMatricula` FROM `alumno`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.alumnoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.alumnoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.alumnoDataTable = New bd_echaurrenDataSet.alumnoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.alumnoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "alumno")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_RutAlumno As String,  _
                    ByVal Original_NombreCompleto As String,  _
                    ByVal Original_ApePaterno As String,  _
                    ByVal Original_ApeMaterno As String,  _
                    ByVal Original_FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p2 As String,  _
                    ByVal Original_SectorVilla As String,  _
                    ByVal Original_Comuna As String,  _
                    ByVal Original_Telefono As String,  _
                    ByVal Original_ColegioPresedencia As String,  _
                    ByVal Original_Curso As String,  _
                    ByVal Original_CursosRepetidos As String,  _
                    ByVal Original_Becado As Global.System.Nullable(Of Byte),  _
                    ByVal Original_HermanosEstablecimiento As String,  _
                    ByVal Original_AntecedentesMedicos As String,  _
                    ByVal Original_NumMatricula As String,  _
                    ByVal Original_FechaMatricula As Global.System.Nullable(Of Date)) As Integer
            If (Original_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RutAlumno")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RutAlumno,String)
            End If
            If (Original_NombreCompleto Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NombreCompleto,String)
            End If
            If (Original_ApePaterno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ApePaterno,String)
            End If
            If (Original_ApeMaterno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ApeMaterno,String)
            End If
            If (Original_FechaNac.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FechaNac.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p2,String)
            End If
            If (Original_SectorVilla Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_SectorVilla,String)
            End If
            If (Original_Comuna Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Comuna,String)
            End If
            If (Original_Telefono Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Telefono,String)
            End If
            If (Original_ColegioPresedencia Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ColegioPresedencia,String)
            End If
            If (Original_Curso Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Curso,String)
            End If
            If (Original_CursosRepetidos Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CursosRepetidos,String)
            End If
            If (Original_Becado.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Becado.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_HermanosEstablecimiento Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_HermanosEstablecimiento,String)
            End If
            If (Original_AntecedentesMedicos Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_AntecedentesMedicos,String)
            End If
            If (Original_NumMatricula Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_NumMatricula,String)
            End If
            If (Original_FechaMatricula.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_FechaMatricula.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RutAlumno As String,  _
                    ByVal NombreCompleto As String,  _
                    ByVal ApePaterno As String,  _
                    ByVal ApeMaterno As String,  _
                    ByVal FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p1 As String,  _
                    ByVal SectorVilla As String,  _
                    ByVal Comuna As String,  _
                    ByVal Telefono As String,  _
                    ByVal ColegioPresedencia As String,  _
                    ByVal Curso As String,  _
                    ByVal CursosRepetidos As String,  _
                    ByVal Becado As Global.System.Nullable(Of Byte),  _
                    ByVal HermanosEstablecimiento As String,  _
                    ByVal AntecedentesMedicos As String,  _
                    ByVal NumMatricula As String,  _
                    ByVal FechaMatricula As Global.System.Nullable(Of Date)) As Integer
            If (RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RutAlumno")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RutAlumno,String)
            End If
            If (NombreCompleto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NombreCompleto,String)
            End If
            If (ApePaterno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ApePaterno,String)
            End If
            If (ApeMaterno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ApeMaterno,String)
            End If
            If (FechaNac.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FechaNac.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(p1,String)
            End If
            If (SectorVilla Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SectorVilla,String)
            End If
            If (Comuna Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Comuna,String)
            End If
            If (Telefono Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Telefono,String)
            End If
            If (ColegioPresedencia Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ColegioPresedencia,String)
            End If
            If (Curso Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Curso,String)
            End If
            If (CursosRepetidos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CursosRepetidos,String)
            End If
            If (Becado.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Becado.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (HermanosEstablecimiento Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(HermanosEstablecimiento,String)
            End If
            If (AntecedentesMedicos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(AntecedentesMedicos,String)
            End If
            If (NumMatricula Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NumMatricula,String)
            End If
            If (FechaMatricula.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FechaMatricula.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RutAlumno As String,  _
                    ByVal NombreCompleto As String,  _
                    ByVal ApePaterno As String,  _
                    ByVal ApeMaterno As String,  _
                    ByVal FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p1 As String,  _
                    ByVal SectorVilla As String,  _
                    ByVal Comuna As String,  _
                    ByVal Telefono As String,  _
                    ByVal ColegioPresedencia As String,  _
                    ByVal Curso As String,  _
                    ByVal CursosRepetidos As String,  _
                    ByVal Becado As Global.System.Nullable(Of Byte),  _
                    ByVal HermanosEstablecimiento As String,  _
                    ByVal AntecedentesMedicos As String,  _
                    ByVal NumMatricula As String,  _
                    ByVal FechaMatricula As Global.System.Nullable(Of Date),  _
                    ByVal Original_RutAlumno As String,  _
                    ByVal Original_NombreCompleto As String,  _
                    ByVal Original_ApePaterno As String,  _
                    ByVal Original_ApeMaterno As String,  _
                    ByVal Original_FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p2 As String,  _
                    ByVal Original_SectorVilla As String,  _
                    ByVal Original_Comuna As String,  _
                    ByVal Original_Telefono As String,  _
                    ByVal Original_ColegioPresedencia As String,  _
                    ByVal Original_Curso As String,  _
                    ByVal Original_CursosRepetidos As String,  _
                    ByVal Original_Becado As Global.System.Nullable(Of Byte),  _
                    ByVal Original_HermanosEstablecimiento As String,  _
                    ByVal Original_AntecedentesMedicos As String,  _
                    ByVal Original_NumMatricula As String,  _
                    ByVal Original_FechaMatricula As Global.System.Nullable(Of Date)) As Integer
            If (RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RutAlumno,String)
            End If
            If (NombreCompleto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NombreCompleto,String)
            End If
            If (ApePaterno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ApePaterno,String)
            End If
            If (ApeMaterno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ApeMaterno,String)
            End If
            If (FechaNac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FechaNac.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(p1,String)
            End If
            If (SectorVilla Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SectorVilla,String)
            End If
            If (Comuna Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Comuna,String)
            End If
            If (Telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Telefono,String)
            End If
            If (ColegioPresedencia Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ColegioPresedencia,String)
            End If
            If (Curso Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Curso,String)
            End If
            If (CursosRepetidos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CursosRepetidos,String)
            End If
            If (Becado.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Becado.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (HermanosEstablecimiento Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(HermanosEstablecimiento,String)
            End If
            If (AntecedentesMedicos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(AntecedentesMedicos,String)
            End If
            If (NumMatricula Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NumMatricula,String)
            End If
            If (FechaMatricula.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FechaMatricula.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_RutAlumno,String)
            End If
            If (Original_NombreCompleto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_NombreCompleto,String)
            End If
            If (Original_ApePaterno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ApePaterno,String)
            End If
            If (Original_ApeMaterno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ApeMaterno,String)
            End If
            If (Original_FechaNac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_FechaNac.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(p2,String)
            End If
            If (Original_SectorVilla Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_SectorVilla,String)
            End If
            If (Original_Comuna Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_Comuna,String)
            End If
            If (Original_Telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Telefono,String)
            End If
            If (Original_ColegioPresedencia Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ColegioPresedencia,String)
            End If
            If (Original_Curso Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Curso,String)
            End If
            If (Original_CursosRepetidos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_CursosRepetidos,String)
            End If
            If (Original_Becado.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Becado.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_HermanosEstablecimiento Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_HermanosEstablecimiento,String)
            End If
            If (Original_AntecedentesMedicos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_AntecedentesMedicos,String)
            End If
            If (Original_NumMatricula Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_NumMatricula,String)
            End If
            If (Original_FechaMatricula.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_FechaMatricula.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NombreCompleto As String,  _
                    ByVal ApePaterno As String,  _
                    ByVal ApeMaterno As String,  _
                    ByVal FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p1 As String,  _
                    ByVal SectorVilla As String,  _
                    ByVal Comuna As String,  _
                    ByVal Telefono As String,  _
                    ByVal ColegioPresedencia As String,  _
                    ByVal Curso As String,  _
                    ByVal CursosRepetidos As String,  _
                    ByVal Becado As Global.System.Nullable(Of Byte),  _
                    ByVal HermanosEstablecimiento As String,  _
                    ByVal AntecedentesMedicos As String,  _
                    ByVal NumMatricula As String,  _
                    ByVal FechaMatricula As Global.System.Nullable(Of Date),  _
                    ByVal Original_RutAlumno As String,  _
                    ByVal Original_NombreCompleto As String,  _
                    ByVal Original_ApePaterno As String,  _
                    ByVal Original_ApeMaterno As String,  _
                    ByVal Original_FechaNac As Global.System.Nullable(Of Date),  _
                    ByVal p2 As String,  _
                    ByVal Original_SectorVilla As String,  _
                    ByVal Original_Comuna As String,  _
                    ByVal Original_Telefono As String,  _
                    ByVal Original_ColegioPresedencia As String,  _
                    ByVal Original_Curso As String,  _
                    ByVal Original_CursosRepetidos As String,  _
                    ByVal Original_Becado As Global.System.Nullable(Of Byte),  _
                    ByVal Original_HermanosEstablecimiento As String,  _
                    ByVal Original_AntecedentesMedicos As String,  _
                    ByVal Original_NumMatricula As String,  _
                    ByVal Original_FechaMatricula As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_RutAlumno, NombreCompleto, ApePaterno, ApeMaterno, FechaNac, p1, SectorVilla, Comuna, Telefono, ColegioPresedencia, Curso, CursosRepetidos, Becado, HermanosEstablecimiento, AntecedentesMedicos, NumMatricula, FechaMatricula, Original_RutAlumno, Original_NombreCompleto, Original_ApePaterno, Original_ApeMaterno, Original_FechaNac, p2, Original_SectorVilla, Original_Comuna, Original_Telefono, Original_ColegioPresedencia, Original_Curso, Original_CursosRepetidos, Original_Becado, Original_HermanosEstablecimiento, Original_AntecedentesMedicos, Original_NumMatricula, Original_FechaMatricula)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class contacto_emergenciaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "contacto_emergencia"
            tableMapping.ColumnMappings.Add("idContacto_emergencia", "idContacto_emergencia")
            tableMapping.ColumnMappings.Add("NombreContacto", "NombreContacto")
            tableMapping.ColumnMappings.Add("Numero", "Numero")
            tableMapping.ColumnMappings.Add("Alumno_RutAlumno", "Alumno_RutAlumno")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `contacto_emergencia` WHERE ((`idContacto_emergencia` = @Original_idC"& _ 
                "ontacto_emergencia) AND ((@IsNull_NombreContacto = 1 AND `NombreContacto` IS NUL"& _ 
                "L) OR (`NombreContacto` = @Original_NombreContacto)) AND ((@IsNull_Numero = 1 AN"& _ 
                "D `Numero` IS NULL) OR (`Numero` = @Original_Numero)) AND (`Alumno_RutAlumno` = "& _ 
                "@Original_Alumno_RutAlumno))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idContacto_emergencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idContacto_emergencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreContacto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreContacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Numero"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `contacto_emergencia` (`idContacto_emergencia`, `NombreContacto`, `Nu"& _ 
                "mero`, `Alumno_RutAlumno`) VALUES (@idContacto_emergencia, @NombreContacto, @Num"& _ 
                "ero, @Alumno_RutAlumno)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idContacto_emergencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idContacto_emergencia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreContacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `contacto_emergencia` SET `idContacto_emergencia` = @idContacto_emergencia"& _ 
                ", `NombreContacto` = @NombreContacto, `Numero` = @Numero, `Alumno_RutAlumno` = @"& _ 
                "Alumno_RutAlumno WHERE ((`idContacto_emergencia` = @Original_idContacto_emergenc"& _ 
                "ia) AND ((@IsNull_NombreContacto = 1 AND `NombreContacto` IS NULL) OR (`NombreCo"& _ 
                "ntacto` = @Original_NombreContacto)) AND ((@IsNull_Numero = 1 AND `Numero` IS NU"& _ 
                "LL) OR (`Numero` = @Original_Numero)) AND (`Alumno_RutAlumno` = @Original_Alumno"& _ 
                "_RutAlumno))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idContacto_emergencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idContacto_emergencia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreContacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idContacto_emergencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idContacto_emergencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreContacto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreContacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreContacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Numero"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `idContacto_emergencia`, `NombreContacto`, `Numero`, `Alumno_RutAlumno` FR"& _ 
                "OM `contacto_emergencia`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.contacto_emergenciaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.contacto_emergenciaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.contacto_emergenciaDataTable = New bd_echaurrenDataSet.contacto_emergenciaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.contacto_emergenciaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "contacto_emergencia")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idContacto_emergencia As String, ByVal Original_NombreContacto As String, ByVal Original_Numero As String, ByVal Original_Alumno_RutAlumno As String) As Integer
            If (Original_idContacto_emergencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idContacto_emergencia")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idContacto_emergencia,String)
            End If
            If (Original_NombreContacto Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NombreContacto,String)
            End If
            If (Original_Numero Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Numero,String)
            End If
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal idContacto_emergencia As String, ByVal NombreContacto As String, ByVal Numero As String, ByVal Alumno_RutAlumno As String) As Integer
            If (idContacto_emergencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idContacto_emergencia")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(idContacto_emergencia,String)
            End If
            If (NombreContacto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NombreContacto,String)
            End If
            If (Numero Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Numero,String)
            End If
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Alumno_RutAlumno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal idContacto_emergencia As String, ByVal NombreContacto As String, ByVal Numero As String, ByVal Alumno_RutAlumno As String, ByVal Original_idContacto_emergencia As String, ByVal Original_NombreContacto As String, ByVal Original_Numero As String, ByVal Original_Alumno_RutAlumno As String) As Integer
            If (idContacto_emergencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idContacto_emergencia")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(idContacto_emergencia,String)
            End If
            If (NombreContacto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NombreContacto,String)
            End If
            If (Numero Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Numero,String)
            End If
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Alumno_RutAlumno,String)
            End If
            If (Original_idContacto_emergencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idContacto_emergencia")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_idContacto_emergencia,String)
            End If
            If (Original_NombreContacto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_NombreContacto,String)
            End If
            If (Original_Numero Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Numero,String)
            End If
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NombreContacto As String, ByVal Numero As String, ByVal Alumno_RutAlumno As String, ByVal Original_idContacto_emergencia As String, ByVal Original_NombreContacto As String, ByVal Original_Numero As String, ByVal Original_Alumno_RutAlumno As String) As Integer
            Return Me.Update(Original_idContacto_emergencia, NombreContacto, Numero, Alumno_RutAlumno, Original_idContacto_emergencia, Original_NombreContacto, Original_Numero, Original_Alumno_RutAlumno)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class direccionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "direccion"
            tableMapping.ColumnMappings.Add("idDireccion", "idDireccion")
            tableMapping.ColumnMappings.Add("NombreCalle", "NombreCalle")
            tableMapping.ColumnMappings.Add("Numero", "Numero")
            tableMapping.ColumnMappings.Add("Comuna", "Comuna")
            tableMapping.ColumnMappings.Add("Sector", "Sector")
            tableMapping.ColumnMappings.Add("Responsable_RutResponsable", "Responsable_RutResponsable")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `direccion` WHERE ((`idDireccion` = @Original_idDireccion) AND ((@IsN"& _ 
                "ull_NombreCalle = 1 AND `NombreCalle` IS NULL) OR (`NombreCalle` = @Original_Nom"& _ 
                "breCalle)) AND ((@IsNull_Numero = 1 AND `Numero` IS NULL) OR (`Numero` = @Origin"& _ 
                "al_Numero)) AND ((@IsNull_Comuna = 1 AND `Comuna` IS NULL) OR (`Comuna` = @Origi"& _ 
                "nal_Comuna)) AND ((@IsNull_Sector = 1 AND `Sector` IS NULL) OR (`Sector` = @Orig"& _ 
                "inal_Sector)) AND (`Responsable_RutResponsable` = @Original_Responsable_RutRespo"& _ 
                "nsable))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idDireccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idDireccion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCalle"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCalle"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Numero"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Comuna"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Sector"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Sector"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Sector"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Sector"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `direccion` (`idDireccion`, `NombreCalle`, `Numero`, `Comuna`, `Secto"& _ 
                "r`, `Responsable_RutResponsable`) VALUES (@idDireccion, @NombreCalle, @Numero, @"& _ 
                "Comuna, @Sector, @Responsable_RutResponsable)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idDireccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idDireccion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCalle"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Sector"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Sector"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `direccion` SET `idDireccion` = @idDireccion, `NombreCalle` = @NombreCalle"& _ 
                ", `Numero` = @Numero, `Comuna` = @Comuna, `Sector` = @Sector, `Responsable_RutRe"& _ 
                "sponsable` = @Responsable_RutResponsable WHERE ((`idDireccion` = @Original_idDir"& _ 
                "eccion) AND ((@IsNull_NombreCalle = 1 AND `NombreCalle` IS NULL) OR (`NombreCall"& _ 
                "e` = @Original_NombreCalle)) AND ((@IsNull_Numero = 1 AND `Numero` IS NULL) OR ("& _ 
                "`Numero` = @Original_Numero)) AND ((@IsNull_Comuna = 1 AND `Comuna` IS NULL) OR "& _ 
                "(`Comuna` = @Original_Comuna)) AND ((@IsNull_Sector = 1 AND `Sector` IS NULL) OR"& _ 
                " (`Sector` = @Original_Sector)) AND (`Responsable_RutResponsable` = @Original_Re"& _ 
                "sponsable_RutResponsable))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idDireccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idDireccion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCalle"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Sector"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Sector"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idDireccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idDireccion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCalle"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCalle"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCalle"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Numero"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Numero"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Comuna"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Comuna"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Comuna"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Sector"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Sector"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Sector"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Sector"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `idDireccion`, `NombreCalle`, `Numero`, `Comuna`, `Sector`, `Responsable_R"& _ 
                "utResponsable` FROM `direccion`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.direccionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.direccionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.direccionDataTable = New bd_echaurrenDataSet.direccionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.direccionDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "direccion")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idDireccion As String, ByVal Original_NombreCalle As String, ByVal Original_Numero As String, ByVal Original_Comuna As String, ByVal Original_Sector As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            If (Original_idDireccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idDireccion")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idDireccion,String)
            End If
            If (Original_NombreCalle Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NombreCalle,String)
            End If
            If (Original_Numero Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Numero,String)
            End If
            If (Original_Comuna Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Comuna,String)
            End If
            If (Original_Sector Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Sector,String)
            End If
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal idDireccion As String, ByVal NombreCalle As String, ByVal Numero As String, ByVal Comuna As String, ByVal Sector As String, ByVal Responsable_RutResponsable As String) As Integer
            If (idDireccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idDireccion")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(idDireccion,String)
            End If
            If (NombreCalle Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NombreCalle,String)
            End If
            If (Numero Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Numero,String)
            End If
            If (Comuna Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Comuna,String)
            End If
            If (Sector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Sector,String)
            End If
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal idDireccion As String, ByVal NombreCalle As String, ByVal Numero As String, ByVal Comuna As String, ByVal Sector As String, ByVal Responsable_RutResponsable As String, ByVal Original_idDireccion As String, ByVal Original_NombreCalle As String, ByVal Original_Numero As String, ByVal Original_Comuna As String, ByVal Original_Sector As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            If (idDireccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idDireccion")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(idDireccion,String)
            End If
            If (NombreCalle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NombreCalle,String)
            End If
            If (Numero Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Numero,String)
            End If
            If (Comuna Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Comuna,String)
            End If
            If (Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Sector,String)
            End If
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Responsable_RutResponsable,String)
            End If
            If (Original_idDireccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idDireccion")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_idDireccion,String)
            End If
            If (Original_NombreCalle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NombreCalle,String)
            End If
            If (Original_Numero Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Numero,String)
            End If
            If (Original_Comuna Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Comuna,String)
            End If
            If (Original_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Sector,String)
            End If
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NombreCalle As String, ByVal Numero As String, ByVal Comuna As String, ByVal Sector As String, ByVal Responsable_RutResponsable As String, ByVal Original_idDireccion As String, ByVal Original_NombreCalle As String, ByVal Original_Numero As String, ByVal Original_Comuna As String, ByVal Original_Sector As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            Return Me.Update(Original_idDireccion, NombreCalle, Numero, Comuna, Sector, Responsable_RutResponsable, Original_idDireccion, Original_NombreCalle, Original_Numero, Original_Comuna, Original_Sector, Original_Responsable_RutResponsable)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class responsableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "responsable"
            tableMapping.ColumnMappings.Add("RutResponsable", "RutResponsable")
            tableMapping.ColumnMappings.Add("NombreCompleto", "NombreCompleto")
            tableMapping.ColumnMappings.Add("Edad", "Edad")
            tableMapping.ColumnMappings.Add("EstudiosCompletados", "EstudiosCompletados")
            tableMapping.ColumnMappings.Add("Correo electronico", "Correo electronico")
            tableMapping.ColumnMappings.Add("Trabajo", "Trabajo")
            tableMapping.ColumnMappings.Add("Cargo", "Cargo")
            tableMapping.ColumnMappings.Add("TelefTrabajo", "TelefTrabajo")
            tableMapping.ColumnMappings.Add("DireccionTrabajo", "DireccionTrabajo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `responsable` WHERE ((`RutResponsable` = @Original_RutResponsable) AN"& _ 
                "D ((@IsNull_NombreCompleto = 1 AND `NombreCompleto` IS NULL) OR (`NombreCompleto"& _ 
                "` = @Original_NombreCompleto)) AND ((@IsNull_Edad = 1 AND `Edad` IS NULL) OR (`E"& _ 
                "dad` = @Original_Edad)) AND ((@IsNull_EstudiosCompletados = 1 AND `EstudiosCompl"& _ 
                "etados` IS NULL) OR (`EstudiosCompletados` = @Original_EstudiosCompletados)) AND"& _ 
                " ((@IsNull_Correo_electronico = 1 AND `Correo electronico` IS NULL) OR (`Correo "& _ 
                "electronico` = @Original_Correo_electronico)) AND ((@IsNull_Trabajo = 1 AND `Tra"& _ 
                "bajo` IS NULL) OR (`Trabajo` = @Original_Trabajo)) AND ((@IsNull_Cargo = 1 AND `"& _ 
                "Cargo` IS NULL) OR (`Cargo` = @Original_Cargo)) AND ((@IsNull_TelefTrabajo = 1 A"& _ 
                "ND `TelefTrabajo` IS NULL) OR (`TelefTrabajo` = @Original_TelefTrabajo)) AND ((@"& _ 
                "IsNull_DireccionTrabajo = 1 AND `DireccionTrabajo` IS NULL) OR (`DireccionTrabaj"& _ 
                "o` = @Original_DireccionTrabajo)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCompleto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Correo_electronico"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Correo_electronico"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Trabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Trabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Cargo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Cargo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TelefTrabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TelefTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `responsable` (`RutResponsable`, `NombreCompleto`, `Edad`, `EstudiosC"& _ 
                "ompletados`, `Correo electronico`, `Trabajo`, `Cargo`, `TelefTrabajo`, `Direccio"& _ 
                "nTrabajo`) VALUES (@RutResponsable, @NombreCompleto, @Edad, @EstudiosCompletados"& _ 
                ", @Correo_electronico, @Trabajo, @Cargo, @TelefTrabajo, @DireccionTrabajo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutResponsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Correo_electronico"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Trabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Cargo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TelefTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `responsable` SET `RutResponsable` = @RutResponsable, `NombreCompleto` = @"& _ 
                "NombreCompleto, `Edad` = @Edad, `EstudiosCompletados` = @EstudiosCompletados, `C"& _ 
                "orreo electronico` = @Correo_electronico, `Trabajo` = @Trabajo, `Cargo` = @Cargo"& _ 
                ", `TelefTrabajo` = @TelefTrabajo, `DireccionTrabajo` = @DireccionTrabajo WHERE ("& _ 
                "(`RutResponsable` = @Original_RutResponsable) AND ((@IsNull_NombreCompleto = 1 A"& _ 
                "ND `NombreCompleto` IS NULL) OR (`NombreCompleto` = @Original_NombreCompleto)) A"& _ 
                "ND ((@IsNull_Edad = 1 AND `Edad` IS NULL) OR (`Edad` = @Original_Edad)) AND ((@I"& _ 
                "sNull_EstudiosCompletados = 1 AND `EstudiosCompletados` IS NULL) OR (`EstudiosCo"& _ 
                "mpletados` = @Original_EstudiosCompletados)) AND ((@IsNull_Correo_electronico = "& _ 
                "1 AND `Correo electronico` IS NULL) OR (`Correo electronico` = @Original_Correo_"& _ 
                "electronico)) AND ((@IsNull_Trabajo = 1 AND `Trabajo` IS NULL) OR (`Trabajo` = @"& _ 
                "Original_Trabajo)) AND ((@IsNull_Cargo = 1 AND `Cargo` IS NULL) OR (`Cargo` = @O"& _ 
                "riginal_Cargo)) AND ((@IsNull_TelefTrabajo = 1 AND `TelefTrabajo` IS NULL) OR (`"& _ 
                "TelefTrabajo` = @Original_TelefTrabajo)) AND ((@IsNull_DireccionTrabajo = 1 AND "& _ 
                "`DireccionTrabajo` IS NULL) OR (`DireccionTrabajo` = @Original_DireccionTrabajo)"& _ 
                "))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutResponsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Correo_electronico"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Trabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Cargo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TelefTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NombreCompleto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NombreCompleto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NombreCompleto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Edad"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Edad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EstudiosCompletados"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EstudiosCompletados"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Correo_electronico"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Correo_electronico"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Correo electronico"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Trabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Trabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Trabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Cargo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Cargo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Cargo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_TelefTrabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TelefTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TelefTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_DireccionTrabajo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DireccionTrabajo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `RutResponsable`, `NombreCompleto`, `Edad`, `EstudiosCompletados`, `Correo"& _ 
                " electronico`, `Trabajo`, `Cargo`, `TelefTrabajo`, `DireccionTrabajo` FROM `resp"& _ 
                "onsable`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.responsableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.responsableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.responsableDataTable = New bd_echaurrenDataSet.responsableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.responsableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "responsable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RutResponsable As String, ByVal Original_NombreCompleto As String, ByVal Original_Edad As Global.System.Nullable(Of Integer), ByVal Original_EstudiosCompletados As String, ByVal Original_Correo_electronico As String, ByVal Original_Trabajo As String, ByVal Original_Cargo As String, ByVal Original_TelefTrabajo As String, ByVal Original_DireccionTrabajo As String) As Integer
            If (Original_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RutResponsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RutResponsable,String)
            End If
            If (Original_NombreCompleto Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NombreCompleto,String)
            End If
            If (Original_Edad.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Edad.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_EstudiosCompletados Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_EstudiosCompletados,String)
            End If
            If (Original_Correo_electronico Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Correo_electronico,String)
            End If
            If (Original_Trabajo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Trabajo,String)
            End If
            If (Original_Cargo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Cargo,String)
            End If
            If (Original_TelefTrabajo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TelefTrabajo,String)
            End If
            If (Original_DireccionTrabajo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DireccionTrabajo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RutResponsable As String, ByVal NombreCompleto As String, ByVal Edad As Global.System.Nullable(Of Integer), ByVal EstudiosCompletados As String, ByVal Correo_electronico As String, ByVal Trabajo As String, ByVal Cargo As String, ByVal TelefTrabajo As String, ByVal DireccionTrabajo As String) As Integer
            If (RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RutResponsable")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RutResponsable,String)
            End If
            If (NombreCompleto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NombreCompleto,String)
            End If
            If (Edad.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Edad.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EstudiosCompletados Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EstudiosCompletados,String)
            End If
            If (Correo_electronico Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Correo_electronico,String)
            End If
            If (Trabajo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Trabajo,String)
            End If
            If (Cargo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Cargo,String)
            End If
            If (TelefTrabajo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TelefTrabajo,String)
            End If
            If (DireccionTrabajo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DireccionTrabajo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RutResponsable As String,  _
                    ByVal NombreCompleto As String,  _
                    ByVal Edad As Global.System.Nullable(Of Integer),  _
                    ByVal EstudiosCompletados As String,  _
                    ByVal Correo_electronico As String,  _
                    ByVal Trabajo As String,  _
                    ByVal Cargo As String,  _
                    ByVal TelefTrabajo As String,  _
                    ByVal DireccionTrabajo As String,  _
                    ByVal Original_RutResponsable As String,  _
                    ByVal Original_NombreCompleto As String,  _
                    ByVal Original_Edad As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EstudiosCompletados As String,  _
                    ByVal Original_Correo_electronico As String,  _
                    ByVal Original_Trabajo As String,  _
                    ByVal Original_Cargo As String,  _
                    ByVal Original_TelefTrabajo As String,  _
                    ByVal Original_DireccionTrabajo As String) As Integer
            If (RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RutResponsable,String)
            End If
            If (NombreCompleto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NombreCompleto,String)
            End If
            If (Edad.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Edad.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EstudiosCompletados Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EstudiosCompletados,String)
            End If
            If (Correo_electronico Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Correo_electronico,String)
            End If
            If (Trabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Trabajo,String)
            End If
            If (Cargo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Cargo,String)
            End If
            If (TelefTrabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TelefTrabajo,String)
            End If
            If (DireccionTrabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DireccionTrabajo,String)
            End If
            If (Original_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_RutResponsable,String)
            End If
            If (Original_NombreCompleto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_NombreCompleto,String)
            End If
            If (Original_Edad.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Edad.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_EstudiosCompletados Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_EstudiosCompletados,String)
            End If
            If (Original_Correo_electronico Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Correo_electronico,String)
            End If
            If (Original_Trabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Trabajo,String)
            End If
            If (Original_Cargo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Cargo,String)
            End If
            If (Original_TelefTrabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_TelefTrabajo,String)
            End If
            If (Original_DireccionTrabajo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_DireccionTrabajo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NombreCompleto As String,  _
                    ByVal Edad As Global.System.Nullable(Of Integer),  _
                    ByVal EstudiosCompletados As String,  _
                    ByVal Correo_electronico As String,  _
                    ByVal Trabajo As String,  _
                    ByVal Cargo As String,  _
                    ByVal TelefTrabajo As String,  _
                    ByVal DireccionTrabajo As String,  _
                    ByVal Original_RutResponsable As String,  _
                    ByVal Original_NombreCompleto As String,  _
                    ByVal Original_Edad As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EstudiosCompletados As String,  _
                    ByVal Original_Correo_electronico As String,  _
                    ByVal Original_Trabajo As String,  _
                    ByVal Original_Cargo As String,  _
                    ByVal Original_TelefTrabajo As String,  _
                    ByVal Original_DireccionTrabajo As String) As Integer
            Return Me.Update(Original_RutResponsable, NombreCompleto, Edad, EstudiosCompletados, Correo_electronico, Trabajo, Cargo, TelefTrabajo, DireccionTrabajo, Original_RutResponsable, Original_NombreCompleto, Original_Edad, Original_EstudiosCompletados, Original_Correo_electronico, Original_Trabajo, Original_Cargo, Original_TelefTrabajo, Original_DireccionTrabajo)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class responsable_alumnoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "responsable_alumno"
            tableMapping.ColumnMappings.Add("Responsable_RutResponsable", "Responsable_RutResponsable")
            tableMapping.ColumnMappings.Add("Alumno_RutAlumno", "Alumno_RutAlumno")
            tableMapping.ColumnMappings.Add("Tipo_responsable_idTipo_responsable", "Tipo_responsable_idTipo_responsable")
            tableMapping.ColumnMappings.Add("Apoderado", "Apoderado")
            tableMapping.ColumnMappings.Add("ApoderadoSuplente", "ApoderadoSuplente")
            tableMapping.ColumnMappings.Add("AlumnoViveCon", "AlumnoViveCon")
            tableMapping.ColumnMappings.Add("NumHijosFamilia", "NumHijosFamilia")
            tableMapping.ColumnMappings.Add("LugarOcupacionHijos", "LugarOcupacionHijos")
            tableMapping.ColumnMappings.Add("GrupoFamiliarComponen", "GrupoFamiliarComponen")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `responsable_alumno` WHERE ((`Responsable_RutResponsable` = @Original"& _ 
                "_Responsable_RutResponsable) AND (`Alumno_RutAlumno` = @Original_Alumno_RutAlumn"& _ 
                "o) AND (`Tipo_responsable_idTipo_responsable` = @Original_Tipo_responsable_idTip"& _ 
                "o_responsable) AND ((@IsNull_Apoderado = 1 AND `Apoderado` IS NULL) OR (`Apodera"& _ 
                "do` = @Original_Apoderado)) AND ((@IsNull_ApoderadoSuplente = 1 AND `ApoderadoSu"& _ 
                "plente` IS NULL) OR (`ApoderadoSuplente` = @Original_ApoderadoSuplente)) AND ((@"& _ 
                "IsNull_AlumnoViveCon = 1 AND `AlumnoViveCon` IS NULL) OR (`AlumnoViveCon` = @Ori"& _ 
                "ginal_AlumnoViveCon)) AND ((@IsNull_NumHijosFamilia = 1 AND `NumHijosFamilia` IS"& _ 
                " NULL) OR (`NumHijosFamilia` = @Original_NumHijosFamilia)) AND ((@IsNull_LugarOc"& _ 
                "upacionHijos = 1 AND `LugarOcupacionHijos` IS NULL) OR (`LugarOcupacionHijos` = "& _ 
                "@Original_LugarOcupacionHijos)) AND ((@IsNull_GrupoFamiliarComponen = 1 AND `Gru"& _ 
                "poFamiliarComponen` IS NULL) OR (`GrupoFamiliarComponen` = @Original_GrupoFamili"& _ 
                "arComponen)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipo_responsable_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable_idTipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Apoderado"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Apoderado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `responsable_alumno` (`Responsable_RutResponsable`, `Alumno_RutAlumno"& _ 
                "`, `Tipo_responsable_idTipo_responsable`, `Apoderado`, `ApoderadoSuplente`, `Alu"& _ 
                "mnoViveCon`, `NumHijosFamilia`, `LugarOcupacionHijos`, `GrupoFamiliarComponen`) "& _ 
                "VALUES (@Responsable_RutResponsable, @Alumno_RutAlumno, @Tipo_responsable_idTipo"& _ 
                "_responsable, @Apoderado, @ApoderadoSuplente, @AlumnoViveCon, @NumHijosFamilia, "& _ 
                "@LugarOcupacionHijos, @GrupoFamiliarComponen)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipo_responsable_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable_idTipo_responsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Apoderado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `responsable_alumno` SET `Responsable_RutResponsable` = @Responsable_RutRe"& _ 
                "sponsable, `Alumno_RutAlumno` = @Alumno_RutAlumno, `Tipo_responsable_idTipo_resp"& _ 
                "onsable` = @Tipo_responsable_idTipo_responsable, `Apoderado` = @Apoderado, `Apod"& _ 
                "eradoSuplente` = @ApoderadoSuplente, `AlumnoViveCon` = @AlumnoViveCon, `NumHijos"& _ 
                "Familia` = @NumHijosFamilia, `LugarOcupacionHijos` = @LugarOcupacionHijos, `Grup"& _ 
                "oFamiliarComponen` = @GrupoFamiliarComponen WHERE ((`Responsable_RutResponsable`"& _ 
                " = @Original_Responsable_RutResponsable) AND (`Alumno_RutAlumno` = @Original_Alu"& _ 
                "mno_RutAlumno) AND (`Tipo_responsable_idTipo_responsable` = @Original_Tipo_respo"& _ 
                "nsable_idTipo_responsable) AND ((@IsNull_Apoderado = 1 AND `Apoderado` IS NULL) "& _ 
                "OR (`Apoderado` = @Original_Apoderado)) AND ((@IsNull_ApoderadoSuplente = 1 AND "& _ 
                "`ApoderadoSuplente` IS NULL) OR (`ApoderadoSuplente` = @Original_ApoderadoSuplen"& _ 
                "te)) AND ((@IsNull_AlumnoViveCon = 1 AND `AlumnoViveCon` IS NULL) OR (`AlumnoViv"& _ 
                "eCon` = @Original_AlumnoViveCon)) AND ((@IsNull_NumHijosFamilia = 1 AND `NumHijo"& _ 
                "sFamilia` IS NULL) OR (`NumHijosFamilia` = @Original_NumHijosFamilia)) AND ((@Is"& _ 
                "Null_LugarOcupacionHijos = 1 AND `LugarOcupacionHijos` IS NULL) OR (`LugarOcupac"& _ 
                "ionHijos` = @Original_LugarOcupacionHijos)) AND ((@IsNull_GrupoFamiliarComponen "& _ 
                "= 1 AND `GrupoFamiliarComponen` IS NULL) OR (`GrupoFamiliarComponen` = @Original"& _ 
                "_GrupoFamiliarComponen)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipo_responsable_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable_idTipo_responsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Apoderado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipo_responsable_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable_idTipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Apoderado"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Apoderado"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "Apoderado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ApoderadoSuplente"
            param.DbType = Global.System.Data.DbType.[SByte]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Byte]
            param.IsNullable = true
            param.SourceColumn = "ApoderadoSuplente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_AlumnoViveCon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlumnoViveCon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumHijosFamilia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumHijosFamilia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_LugarOcupacionHijos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LugarOcupacionHijos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_GrupoFamiliarComponen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "GrupoFamiliarComponen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `Responsable_RutResponsable`, `Alumno_RutAlumno`, `Tipo_responsable_idTipo"& _ 
                "_responsable`, `Apoderado`, `ApoderadoSuplente`, `AlumnoViveCon`, `NumHijosFamil"& _ 
                "ia`, `LugarOcupacionHijos`, `GrupoFamiliarComponen` FROM `responsable_alumno`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.responsable_alumnoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.responsable_alumnoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.responsable_alumnoDataTable = New bd_echaurrenDataSet.responsable_alumnoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.responsable_alumnoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "responsable_alumno")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Responsable_RutResponsable As String, ByVal Original_Alumno_RutAlumno As String, ByVal Original_Tipo_responsable_idTipo_responsable As String, ByVal Original_Apoderado As Global.System.Nullable(Of Byte), ByVal Original_ApoderadoSuplente As Global.System.Nullable(Of Byte), ByVal Original_AlumnoViveCon As String, ByVal Original_NumHijosFamilia As String, ByVal Original_LugarOcupacionHijos As String, ByVal Original_GrupoFamiliarComponen As String) As Integer
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            If (Original_Tipo_responsable_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tipo_responsable_idTipo_responsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Tipo_responsable_idTipo_responsable,String)
            End If
            If (Original_Apoderado.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Apoderado.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_ApoderadoSuplente.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ApoderadoSuplente.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_AlumnoViveCon Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_AlumnoViveCon,String)
            End If
            If (Original_NumHijosFamilia Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NumHijosFamilia,String)
            End If
            If (Original_LugarOcupacionHijos Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_LugarOcupacionHijos,String)
            End If
            If (Original_GrupoFamiliarComponen Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_GrupoFamiliarComponen,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Responsable_RutResponsable As String, ByVal Alumno_RutAlumno As String, ByVal Tipo_responsable_idTipo_responsable As String, ByVal Apoderado As Global.System.Nullable(Of Byte), ByVal ApoderadoSuplente As Global.System.Nullable(Of Byte), ByVal AlumnoViveCon As String, ByVal NumHijosFamilia As String, ByVal LugarOcupacionHijos As String, ByVal GrupoFamiliarComponen As String) As Integer
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Responsable_RutResponsable,String)
            End If
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Alumno_RutAlumno,String)
            End If
            If (Tipo_responsable_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tipo_responsable_idTipo_responsable")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Tipo_responsable_idTipo_responsable,String)
            End If
            If (Apoderado.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Apoderado.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ApoderadoSuplente.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ApoderadoSuplente.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AlumnoViveCon Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(AlumnoViveCon,String)
            End If
            If (NumHijosFamilia Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NumHijosFamilia,String)
            End If
            If (LugarOcupacionHijos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LugarOcupacionHijos,String)
            End If
            If (GrupoFamiliarComponen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(GrupoFamiliarComponen,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Responsable_RutResponsable As String,  _
                    ByVal Alumno_RutAlumno As String,  _
                    ByVal Tipo_responsable_idTipo_responsable As String,  _
                    ByVal Apoderado As Global.System.Nullable(Of Byte),  _
                    ByVal ApoderadoSuplente As Global.System.Nullable(Of Byte),  _
                    ByVal AlumnoViveCon As String,  _
                    ByVal NumHijosFamilia As String,  _
                    ByVal LugarOcupacionHijos As String,  _
                    ByVal GrupoFamiliarComponen As String,  _
                    ByVal Original_Responsable_RutResponsable As String,  _
                    ByVal Original_Alumno_RutAlumno As String,  _
                    ByVal Original_Tipo_responsable_idTipo_responsable As String,  _
                    ByVal Original_Apoderado As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ApoderadoSuplente As Global.System.Nullable(Of Byte),  _
                    ByVal Original_AlumnoViveCon As String,  _
                    ByVal Original_NumHijosFamilia As String,  _
                    ByVal Original_LugarOcupacionHijos As String,  _
                    ByVal Original_GrupoFamiliarComponen As String) As Integer
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Responsable_RutResponsable,String)
            End If
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Alumno_RutAlumno,String)
            End If
            If (Tipo_responsable_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tipo_responsable_idTipo_responsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Tipo_responsable_idTipo_responsable,String)
            End If
            If (Apoderado.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Apoderado.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ApoderadoSuplente.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ApoderadoSuplente.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AlumnoViveCon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(AlumnoViveCon,String)
            End If
            If (NumHijosFamilia Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NumHijosFamilia,String)
            End If
            If (LugarOcupacionHijos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LugarOcupacionHijos,String)
            End If
            If (GrupoFamiliarComponen Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(GrupoFamiliarComponen,String)
            End If
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            If (Original_Tipo_responsable_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tipo_responsable_idTipo_responsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Tipo_responsable_idTipo_responsable,String)
            End If
            If (Original_Apoderado.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Apoderado.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_ApoderadoSuplente.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ApoderadoSuplente.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_AlumnoViveCon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_AlumnoViveCon,String)
            End If
            If (Original_NumHijosFamilia Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_NumHijosFamilia,String)
            End If
            If (Original_LugarOcupacionHijos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_LugarOcupacionHijos,String)
            End If
            If (Original_GrupoFamiliarComponen Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_GrupoFamiliarComponen,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Apoderado As Global.System.Nullable(Of Byte), ByVal ApoderadoSuplente As Global.System.Nullable(Of Byte), ByVal AlumnoViveCon As String, ByVal NumHijosFamilia As String, ByVal LugarOcupacionHijos As String, ByVal GrupoFamiliarComponen As String, ByVal Original_Responsable_RutResponsable As String, ByVal Original_Alumno_RutAlumno As String, ByVal Original_Tipo_responsable_idTipo_responsable As String, ByVal Original_Apoderado As Global.System.Nullable(Of Byte), ByVal Original_ApoderadoSuplente As Global.System.Nullable(Of Byte), ByVal Original_AlumnoViveCon As String, ByVal Original_NumHijosFamilia As String, ByVal Original_LugarOcupacionHijos As String, ByVal Original_GrupoFamiliarComponen As String) As Integer
            Return Me.Update(Original_Responsable_RutResponsable, Original_Alumno_RutAlumno, Original_Tipo_responsable_idTipo_responsable, Apoderado, ApoderadoSuplente, AlumnoViveCon, NumHijosFamilia, LugarOcupacionHijos, GrupoFamiliarComponen, Original_Responsable_RutResponsable, Original_Alumno_RutAlumno, Original_Tipo_responsable_idTipo_responsable, Original_Apoderado, Original_ApoderadoSuplente, Original_AlumnoViveCon, Original_NumHijosFamilia, Original_LugarOcupacionHijos, Original_GrupoFamiliarComponen)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class servicio_por_alumnoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "servicio_por_alumno"
            tableMapping.ColumnMappings.Add("Alumno_RutAlumno", "Alumno_RutAlumno")
            tableMapping.ColumnMappings.Add("Servicio_salud_idServicio_salud", "Servicio_salud_idServicio_salud")
            tableMapping.ColumnMappings.Add("Seguros", "Seguros")
            tableMapping.ColumnMappings.Add("OtrosServicios", "OtrosServicios")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `servicio_por_alumno` WHERE ((`Alumno_RutAlumno` = @Original_Alumno_R"& _ 
                "utAlumno) AND (`Servicio_salud_idServicio_salud` = @Original_Servicio_salud_idSe"& _ 
                "rvicio_salud) AND ((@IsNull_Seguros = 1 AND `Seguros` IS NULL) OR (`Seguros` = @"& _ 
                "Original_Seguros)) AND ((@IsNull_OtrosServicios = 1 AND `OtrosServicios` IS NULL"& _ 
                ") OR (`OtrosServicios` = @Original_OtrosServicios)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Servicio_salud_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Servicio_salud_idServicio_salud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Seguros"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Seguros"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_OtrosServicios"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_OtrosServicios"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `servicio_por_alumno` (`Alumno_RutAlumno`, `Servicio_salud_idServicio"& _ 
                "_salud`, `Seguros`, `OtrosServicios`) VALUES (@Alumno_RutAlumno, @Servicio_salud"& _ 
                "_idServicio_salud, @Seguros, @OtrosServicios)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Servicio_salud_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Servicio_salud_idServicio_salud"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Seguros"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@OtrosServicios"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `servicio_por_alumno` SET `Alumno_RutAlumno` = @Alumno_RutAlumno, `Servici"& _ 
                "o_salud_idServicio_salud` = @Servicio_salud_idServicio_salud, `Seguros` = @Segur"& _ 
                "os, `OtrosServicios` = @OtrosServicios WHERE ((`Alumno_RutAlumno` = @Original_Al"& _ 
                "umno_RutAlumno) AND (`Servicio_salud_idServicio_salud` = @Original_Servicio_salu"& _ 
                "d_idServicio_salud) AND ((@IsNull_Seguros = 1 AND `Seguros` IS NULL) OR (`Seguro"& _ 
                "s` = @Original_Seguros)) AND ((@IsNull_OtrosServicios = 1 AND `OtrosServicios` I"& _ 
                "S NULL) OR (`OtrosServicios` = @Original_OtrosServicios)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Servicio_salud_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Servicio_salud_idServicio_salud"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Seguros"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@OtrosServicios"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Alumno_RutAlumno"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Alumno_RutAlumno"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Servicio_salud_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Servicio_salud_idServicio_salud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Seguros"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Seguros"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Seguros"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_OtrosServicios"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_OtrosServicios"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "OtrosServicios"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `Alumno_RutAlumno`, `Servicio_salud_idServicio_salud`, `Seguros`, `OtrosSe"& _ 
                "rvicios` FROM `servicio_por_alumno`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.servicio_por_alumnoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.servicio_por_alumnoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.servicio_por_alumnoDataTable = New bd_echaurrenDataSet.servicio_por_alumnoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.servicio_por_alumnoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "servicio_por_alumno")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Alumno_RutAlumno As String, ByVal Original_Servicio_salud_idServicio_salud As String, ByVal Original_Seguros As String, ByVal Original_OtrosServicios As String) As Integer
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            If (Original_Servicio_salud_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Servicio_salud_idServicio_salud")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Servicio_salud_idServicio_salud,String)
            End If
            If (Original_Seguros Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Seguros,String)
            End If
            If (Original_OtrosServicios Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_OtrosServicios,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Alumno_RutAlumno As String, ByVal Servicio_salud_idServicio_salud As String, ByVal Seguros As String, ByVal OtrosServicios As String) As Integer
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Alumno_RutAlumno,String)
            End If
            If (Servicio_salud_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Servicio_salud_idServicio_salud")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Servicio_salud_idServicio_salud,String)
            End If
            If (Seguros Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Seguros,String)
            End If
            If (OtrosServicios Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(OtrosServicios,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Alumno_RutAlumno As String, ByVal Servicio_salud_idServicio_salud As String, ByVal Seguros As String, ByVal OtrosServicios As String, ByVal Original_Alumno_RutAlumno As String, ByVal Original_Servicio_salud_idServicio_salud As String, ByVal Original_Seguros As String, ByVal Original_OtrosServicios As String) As Integer
            If (Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Alumno_RutAlumno,String)
            End If
            If (Servicio_salud_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Servicio_salud_idServicio_salud")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Servicio_salud_idServicio_salud,String)
            End If
            If (Seguros Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Seguros,String)
            End If
            If (OtrosServicios Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(OtrosServicios,String)
            End If
            If (Original_Alumno_RutAlumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Alumno_RutAlumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Alumno_RutAlumno,String)
            End If
            If (Original_Servicio_salud_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Servicio_salud_idServicio_salud")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Servicio_salud_idServicio_salud,String)
            End If
            If (Original_Seguros Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Seguros,String)
            End If
            If (Original_OtrosServicios Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_OtrosServicios,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Seguros As String, ByVal OtrosServicios As String, ByVal Original_Alumno_RutAlumno As String, ByVal Original_Servicio_salud_idServicio_salud As String, ByVal Original_Seguros As String, ByVal Original_OtrosServicios As String) As Integer
            Return Me.Update(Original_Alumno_RutAlumno, Original_Servicio_salud_idServicio_salud, Seguros, OtrosServicios, Original_Alumno_RutAlumno, Original_Servicio_salud_idServicio_salud, Original_Seguros, Original_OtrosServicios)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class servicio_saludTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "servicio_salud"
            tableMapping.ColumnMappings.Add("idServicio_salud", "idServicio_salud")
            tableMapping.ColumnMappings.Add("PlanSalud", "PlanSalud")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `servicio_salud` WHERE ((`idServicio_salud` = @Original_idServicio_sa"& _ 
                "lud) AND ((@IsNull_PlanSalud = 1 AND `PlanSalud` IS NULL) OR (`PlanSalud` = @Ori"& _ 
                "ginal_PlanSalud)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idServicio_salud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_PlanSalud"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_PlanSalud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `servicio_salud` (`idServicio_salud`, `PlanSalud`) VALUES (@idServici"& _ 
                "o_salud, @PlanSalud)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idServicio_salud"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@PlanSalud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `servicio_salud` SET `idServicio_salud` = @idServicio_salud, `PlanSalud` ="& _ 
                " @PlanSalud WHERE ((`idServicio_salud` = @Original_idServicio_salud) AND ((@IsNu"& _ 
                "ll_PlanSalud = 1 AND `PlanSalud` IS NULL) OR (`PlanSalud` = @Original_PlanSalud)"& _ 
                "))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idServicio_salud"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@PlanSalud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idServicio_salud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idServicio_salud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_PlanSalud"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_PlanSalud"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PlanSalud"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `idServicio_salud`, `PlanSalud` FROM `servicio_salud`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.servicio_saludDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.servicio_saludDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.servicio_saludDataTable = New bd_echaurrenDataSet.servicio_saludDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.servicio_saludDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "servicio_salud")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idServicio_salud As String, ByVal Original_PlanSalud As String) As Integer
            If (Original_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idServicio_salud")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idServicio_salud,String)
            End If
            If (Original_PlanSalud Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PlanSalud,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal idServicio_salud As String, ByVal PlanSalud As String) As Integer
            If (idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idServicio_salud")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(idServicio_salud,String)
            End If
            If (PlanSalud Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PlanSalud,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal idServicio_salud As String, ByVal PlanSalud As String, ByVal Original_idServicio_salud As String, ByVal Original_PlanSalud As String) As Integer
            If (idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idServicio_salud")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(idServicio_salud,String)
            End If
            If (PlanSalud Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PlanSalud,String)
            End If
            If (Original_idServicio_salud Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idServicio_salud")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_idServicio_salud,String)
            End If
            If (Original_PlanSalud Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_PlanSalud,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PlanSalud As String, ByVal Original_idServicio_salud As String, ByVal Original_PlanSalud As String) As Integer
            Return Me.Update(Original_idServicio_salud, PlanSalud, Original_idServicio_salud, Original_PlanSalud)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class telefonoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "telefono"
            tableMapping.ColumnMappings.Add("idTelefono", "idTelefono")
            tableMapping.ColumnMappings.Add("NumFijo", "NumFijo")
            tableMapping.ColumnMappings.Add("NumCelular", "NumCelular")
            tableMapping.ColumnMappings.Add("Responsable_RutResponsable", "Responsable_RutResponsable")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `telefono` WHERE ((`idTelefono` = @Original_idTelefono) AND ((@IsNull"& _ 
                "_NumFijo = 1 AND `NumFijo` IS NULL) OR (`NumFijo` = @Original_NumFijo)) AND ((@I"& _ 
                "sNull_NumCelular = 1 AND `NumCelular` IS NULL) OR (`NumCelular` = @Original_NumC"& _ 
                "elular)) AND (`Responsable_RutResponsable` = @Original_Responsable_RutResponsabl"& _ 
                "e))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idTelefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTelefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumFijo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumFijo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumCelular"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumCelular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `telefono` (`idTelefono`, `NumFijo`, `NumCelular`, `Responsable_RutRe"& _ 
                "sponsable`) VALUES (@idTelefono, @NumFijo, @NumCelular, @Responsable_RutResponsa"& _ 
                "ble)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idTelefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTelefono"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumFijo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumCelular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `telefono` SET `idTelefono` = @idTelefono, `NumFijo` = @NumFijo, `NumCelul"& _ 
                "ar` = @NumCelular, `Responsable_RutResponsable` = @Responsable_RutResponsable WH"& _ 
                "ERE ((`idTelefono` = @Original_idTelefono) AND ((@IsNull_NumFijo = 1 AND `NumFij"& _ 
                "o` IS NULL) OR (`NumFijo` = @Original_NumFijo)) AND ((@IsNull_NumCelular = 1 AND"& _ 
                " `NumCelular` IS NULL) OR (`NumCelular` = @Original_NumCelular)) AND (`Responsab"& _ 
                "le_RutResponsable` = @Original_Responsable_RutResponsable))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idTelefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTelefono"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumFijo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NumCelular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idTelefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTelefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumFijo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumFijo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumFijo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_NumCelular"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NumCelular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NumCelular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Responsable_RutResponsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Responsable_RutResponsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `idTelefono`, `NumFijo`, `NumCelular`, `Responsable_RutResponsable` FROM `"& _ 
                "telefono`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.telefonoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.telefonoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.telefonoDataTable = New bd_echaurrenDataSet.telefonoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.telefonoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "telefono")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idTelefono As String, ByVal Original_NumFijo As String, ByVal Original_NumCelular As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            If (Original_idTelefono Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idTelefono")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idTelefono,String)
            End If
            If (Original_NumFijo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NumFijo,String)
            End If
            If (Original_NumCelular Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NumCelular,String)
            End If
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal idTelefono As String, ByVal NumFijo As String, ByVal NumCelular As String, ByVal Responsable_RutResponsable As String) As Integer
            If (idTelefono Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idTelefono")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(idTelefono,String)
            End If
            If (NumFijo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NumFijo,String)
            End If
            If (NumCelular Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NumCelular,String)
            End If
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal idTelefono As String, ByVal NumFijo As String, ByVal NumCelular As String, ByVal Responsable_RutResponsable As String, ByVal Original_idTelefono As String, ByVal Original_NumFijo As String, ByVal Original_NumCelular As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            If (idTelefono Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idTelefono")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(idTelefono,String)
            End If
            If (NumFijo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NumFijo,String)
            End If
            If (NumCelular Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NumCelular,String)
            End If
            If (Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Responsable_RutResponsable,String)
            End If
            If (Original_idTelefono Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idTelefono")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_idTelefono,String)
            End If
            If (Original_NumFijo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_NumFijo,String)
            End If
            If (Original_NumCelular Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NumCelular,String)
            End If
            If (Original_Responsable_RutResponsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Responsable_RutResponsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Responsable_RutResponsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NumFijo As String, ByVal NumCelular As String, ByVal Responsable_RutResponsable As String, ByVal Original_idTelefono As String, ByVal Original_NumFijo As String, ByVal Original_NumCelular As String, ByVal Original_Responsable_RutResponsable As String) As Integer
            Return Me.Update(Original_idTelefono, NumFijo, NumCelular, Responsable_RutResponsable, Original_idTelefono, Original_NumFijo, Original_NumCelular, Original_Responsable_RutResponsable)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tipo_responsableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tipo_responsable"
            tableMapping.ColumnMappings.Add("idTipo_responsable", "idTipo_responsable")
            tableMapping.ColumnMappings.Add("Tipo_responsable", "Tipo_responsable")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tipo_responsable` WHERE ((`idTipo_responsable` = @Original_idTipo_re"& _ 
                "sponsable) AND ((@IsNull_Tipo_responsable = 1 AND `Tipo_responsable` IS NULL) OR"& _ 
                " (`Tipo_responsable` = @Original_Tipo_responsable)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Tipo_responsable"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tipo_responsable` (`idTipo_responsable`, `Tipo_responsable`) VALUES "& _ 
                "(@idTipo_responsable, @Tipo_responsable)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTipo_responsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tipo_responsable` SET `idTipo_responsable` = @idTipo_responsable, `Tipo_r"& _ 
                "esponsable` = @Tipo_responsable WHERE ((`idTipo_responsable` = @Original_idTipo_"& _ 
                "responsable) AND ((@IsNull_Tipo_responsable = 1 AND `Tipo_responsable` IS NULL) "& _ 
                "OR (`Tipo_responsable` = @Original_Tipo_responsable)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTipo_responsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Tipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_idTipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idTipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@IsNull_Tipo_responsable"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_Tipo_responsable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Tipo_responsable"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.ColegioEchaurren.My.MySettings.Default.bd_echaurrenConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `idTipo_responsable`, `Tipo_responsable` FROM `tipo_responsable`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As bd_echaurrenDataSet.tipo_responsableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As bd_echaurrenDataSet.tipo_responsableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As bd_echaurrenDataSet.tipo_responsableDataTable = New bd_echaurrenDataSet.tipo_responsableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As bd_echaurrenDataSet.tipo_responsableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As bd_echaurrenDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tipo_responsable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_idTipo_responsable As String, ByVal Original_Tipo_responsable As String) As Integer
            If (Original_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idTipo_responsable")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_idTipo_responsable,String)
            End If
            If (Original_Tipo_responsable Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Tipo_responsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal idTipo_responsable As String, ByVal Tipo_responsable As String) As Integer
            If (idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idTipo_responsable")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(idTipo_responsable,String)
            End If
            If (Tipo_responsable Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Tipo_responsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal idTipo_responsable As String, ByVal Tipo_responsable As String, ByVal Original_idTipo_responsable As String, ByVal Original_Tipo_responsable As String) As Integer
            If (idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idTipo_responsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(idTipo_responsable,String)
            End If
            If (Tipo_responsable Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Tipo_responsable,String)
            End If
            If (Original_idTipo_responsable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idTipo_responsable")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_idTipo_responsable,String)
            End If
            If (Original_Tipo_responsable Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Tipo_responsable,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tipo_responsable As String, ByVal Original_idTipo_responsable As String, ByVal Original_Tipo_responsable As String) As Integer
            Return Me.Update(Original_idTipo_responsable, Tipo_responsable, Original_idTipo_responsable, Original_Tipo_responsable)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _alumnoTableAdapter As alumnoTableAdapter
        
        Private _contacto_emergenciaTableAdapter As contacto_emergenciaTableAdapter
        
        Private _direccionTableAdapter As direccionTableAdapter
        
        Private _responsableTableAdapter As responsableTableAdapter
        
        Private _responsable_alumnoTableAdapter As responsable_alumnoTableAdapter
        
        Private _servicio_por_alumnoTableAdapter As servicio_por_alumnoTableAdapter
        
        Private _servicio_saludTableAdapter As servicio_saludTableAdapter
        
        Private _telefonoTableAdapter As telefonoTableAdapter
        
        Private _tipo_responsableTableAdapter As tipo_responsableTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property alumnoTableAdapter() As alumnoTableAdapter
            Get
                Return Me._alumnoTableAdapter
            End Get
            Set
                Me._alumnoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property contacto_emergenciaTableAdapter() As contacto_emergenciaTableAdapter
            Get
                Return Me._contacto_emergenciaTableAdapter
            End Get
            Set
                Me._contacto_emergenciaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property direccionTableAdapter() As direccionTableAdapter
            Get
                Return Me._direccionTableAdapter
            End Get
            Set
                Me._direccionTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property responsableTableAdapter() As responsableTableAdapter
            Get
                Return Me._responsableTableAdapter
            End Get
            Set
                Me._responsableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property responsable_alumnoTableAdapter() As responsable_alumnoTableAdapter
            Get
                Return Me._responsable_alumnoTableAdapter
            End Get
            Set
                Me._responsable_alumnoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property servicio_por_alumnoTableAdapter() As servicio_por_alumnoTableAdapter
            Get
                Return Me._servicio_por_alumnoTableAdapter
            End Get
            Set
                Me._servicio_por_alumnoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property servicio_saludTableAdapter() As servicio_saludTableAdapter
            Get
                Return Me._servicio_saludTableAdapter
            End Get
            Set
                Me._servicio_saludTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property telefonoTableAdapter() As telefonoTableAdapter
            Get
                Return Me._telefonoTableAdapter
            End Get
            Set
                Me._telefonoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tipo_responsableTableAdapter() As tipo_responsableTableAdapter
            Get
                Return Me._tipo_responsableTableAdapter
            End Get
            Set
                Me._tipo_responsableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._alumnoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._alumnoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._alumnoTableAdapter.Connection
                End If
                If ((Not (Me._contacto_emergenciaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._contacto_emergenciaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._contacto_emergenciaTableAdapter.Connection
                End If
                If ((Not (Me._direccionTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._direccionTableAdapter.Connection) Is Nothing)) Then
                    Return Me._direccionTableAdapter.Connection
                End If
                If ((Not (Me._responsableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._responsableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._responsableTableAdapter.Connection
                End If
                If ((Not (Me._responsable_alumnoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._responsable_alumnoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._responsable_alumnoTableAdapter.Connection
                End If
                If ((Not (Me._servicio_por_alumnoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._servicio_por_alumnoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._servicio_por_alumnoTableAdapter.Connection
                End If
                If ((Not (Me._servicio_saludTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._servicio_saludTableAdapter.Connection) Is Nothing)) Then
                    Return Me._servicio_saludTableAdapter.Connection
                End If
                If ((Not (Me._telefonoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._telefonoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._telefonoTableAdapter.Connection
                End If
                If ((Not (Me._tipo_responsableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tipo_responsableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tipo_responsableTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._direccionTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._responsableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As bd_echaurrenDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._responsableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._responsableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tipo_responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tipo_responsableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.servicio_salud.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._servicio_saludTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._alumnoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.responsable_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._responsable_alumnoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.telefono.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._telefonoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._direccionTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.direccion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._direccionTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.contacto_emergencia.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._contacto_emergenciaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.servicio_por_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._servicio_por_alumnoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As bd_echaurrenDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._responsableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._responsableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tipo_responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tipo_responsableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.servicio_salud.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._servicio_saludTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._alumnoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.responsable_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._responsable_alumnoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.telefono.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._telefonoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._direccionTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.direccion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._direccionTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.contacto_emergencia.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._contacto_emergenciaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.servicio_por_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._servicio_por_alumnoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As bd_echaurrenDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.servicio_por_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._servicio_por_alumnoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.contacto_emergencia.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._contacto_emergenciaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._direccionTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.direccion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._direccionTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.telefono.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._telefonoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.responsable_alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._responsable_alumnoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.alumno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._alumnoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.servicio_salud.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._servicio_saludTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tipo_responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tipo_responsableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._responsableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.responsable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._responsableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As bd_echaurrenDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._alumnoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._alumnoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._contacto_emergenciaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._contacto_emergenciaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._direccionTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._direccionTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._responsableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._responsableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._responsable_alumnoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._responsable_alumnoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._servicio_por_alumnoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._servicio_por_alumnoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._servicio_saludTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._servicio_saludTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._telefonoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._telefonoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tipo_responsableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tipo_responsableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._alumnoTableAdapter, Me._alumnoTableAdapter.Connection)
                    Me._alumnoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._alumnoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._alumnoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._contacto_emergenciaTableAdapter, Me._contacto_emergenciaTableAdapter.Connection)
                    Me._contacto_emergenciaTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._contacto_emergenciaTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._contacto_emergenciaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._contacto_emergenciaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._contacto_emergenciaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._direccionTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._direccionTableAdapter, Me._direccionTableAdapter.Connection)
                    Me._direccionTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._direccionTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._direccionTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._direccionTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._direccionTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._responsableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._responsableTableAdapter, Me._responsableTableAdapter.Connection)
                    Me._responsableTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._responsableTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._responsableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._responsableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._responsableTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._responsable_alumnoTableAdapter, Me._responsable_alumnoTableAdapter.Connection)
                    Me._responsable_alumnoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._responsable_alumnoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._responsable_alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._responsable_alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._responsable_alumnoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._servicio_por_alumnoTableAdapter, Me._servicio_por_alumnoTableAdapter.Connection)
                    Me._servicio_por_alumnoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._servicio_por_alumnoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._servicio_por_alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._servicio_por_alumnoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._servicio_por_alumnoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._servicio_saludTableAdapter, Me._servicio_saludTableAdapter.Connection)
                    Me._servicio_saludTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._servicio_saludTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._servicio_saludTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._servicio_saludTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._servicio_saludTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._telefonoTableAdapter, Me._telefonoTableAdapter.Connection)
                    Me._telefonoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._telefonoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._telefonoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._telefonoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._telefonoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tipo_responsableTableAdapter, Me._tipo_responsableTableAdapter.Connection)
                    Me._tipo_responsableTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tipo_responsableTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._tipo_responsableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tipo_responsableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tipo_responsableTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._alumnoTableAdapter) Is Nothing) Then
                    Me._alumnoTableAdapter.Connection = CType(revertConnections(Me._alumnoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._alumnoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._contacto_emergenciaTableAdapter) Is Nothing) Then
                    Me._contacto_emergenciaTableAdapter.Connection = CType(revertConnections(Me._contacto_emergenciaTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._contacto_emergenciaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._direccionTableAdapter) Is Nothing) Then
                    Me._direccionTableAdapter.Connection = CType(revertConnections(Me._direccionTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._direccionTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._responsableTableAdapter) Is Nothing) Then
                    Me._responsableTableAdapter.Connection = CType(revertConnections(Me._responsableTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._responsableTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._responsable_alumnoTableAdapter) Is Nothing) Then
                    Me._responsable_alumnoTableAdapter.Connection = CType(revertConnections(Me._responsable_alumnoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._responsable_alumnoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._servicio_por_alumnoTableAdapter) Is Nothing) Then
                    Me._servicio_por_alumnoTableAdapter.Connection = CType(revertConnections(Me._servicio_por_alumnoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._servicio_por_alumnoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._servicio_saludTableAdapter) Is Nothing) Then
                    Me._servicio_saludTableAdapter.Connection = CType(revertConnections(Me._servicio_saludTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._servicio_saludTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._telefonoTableAdapter) Is Nothing) Then
                    Me._telefonoTableAdapter.Connection = CType(revertConnections(Me._telefonoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._telefonoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tipo_responsableTableAdapter) Is Nothing) Then
                    Me._tipo_responsableTableAdapter.Connection = CType(revertConnections(Me._tipo_responsableTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tipo_responsableTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
